{"version":3,"sources":["webpack:///src/app/authentication/sign-in/sign-out/sign-out.component.ts","webpack:///src/app/authentication/sign-in/sign-out/sign-out.component.html","webpack:///src/app/authentication/sign-in/sign-in.component.ts","webpack:///src/app/authentication/sign-in/sign-in.component.html","webpack:///src/app/authentication/sign-in/otp/otp.component.ts","webpack:///src/app/authentication/sign-in/otp/otp.component.html","webpack:///src/app/authentication/sign-in/sign-in-routing.module.ts","webpack:///src/app/authentication/sign-in/sign-in.module.ts"],"names":["SignOutComponent","data","$dialog","$snackBar","$authentication","sse","signOut","subscribe","result","open","message","duration","close","error","SignInComponent","$bottomSheet","$router","config","sifg","slug","required","pattern","phone","authenticated","getValue","sodr","width","name","user","disableClose","afterClosed","navigate","event","preventDefault","valid","disable","getOTP","value","enable","si","patchValue","trim","toUpperCase","signIn","beautifySlug","OTPComponent","$bottomSheetRef","vfg","otp","verifyOTP","dismiss","routes","path","component","SignInRoutingModule","forChild","SignInModule"],"mappings":"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","file":"authentication-sign-in-sign-in-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-out',\r\n  templateUrl: './sign-out.component.html',\r\n  styleUrls: ['./sign-out.component.css']\r\n})\r\nexport class SignOutComponent implements OnInit {\r\n  sse = '';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private $dialog: MatDialogRef<SignOutComponent>,\r\n    private $snackBar: MatSnackBar,\r\n    private $authentication: AuthenticationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signOut(): void {\r\n    this.$authentication.signOut().subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$snackBar.open(result.message, '', {\r\n          duration: 3000,\r\n        });\r\n\r\n        this.$dialog.close(true);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.sse = error.message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h1 class=\"mat-h1\" mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n    <p>You are already signed in. If you wish to sign in with another you account, you will have to sign out first</p>\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>Dashboard</button>\r\n    <button mat-button (click)=\"signOut()\">Sign Out</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { OTPComponent } from '@authentication/sign-in/otp/otp.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignOutComponent } from '@authentication/sign-in/sign-out/sign-out.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  sse = '';\r\n\r\n  sifg: FormGroup = new FormGroup({\r\n    slug: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[A-Za-z]{1,8}$/),\r\n      ],\r\n    ),\r\n    phone: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[0-9]{10}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  constructor(\r\n    private $authentication: AuthenticationService,\r\n    private $bottomSheet: MatBottomSheet,\r\n    private $dialog: MatDialog,\r\n    private $router: Router,\r\n    public config: ConfigService,\r\n  ) {\r\n    if ($authentication.authenticated.getValue()) {\r\n      const sodr = this.$dialog.open(SignOutComponent, {\r\n        width: '360px',\r\n        data: {\r\n          name: $authentication.user?.name || 'Untitled',\r\n        },\r\n        disableClose: true,\r\n      });\r\n\r\n      sodr.afterClosed().subscribe((result: boolean) => {\r\n        if (result === false) {\r\n          this.$router.navigate(['/dashboard']);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signIn(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.sifg.valid) {\r\n      this.sse = '';\r\n      this.sifg.disable();\r\n      this.$authentication.getOTP(this.sifg.value.phone).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.sifg.enable();\r\n          this.$bottomSheet.open(OTPComponent, {\r\n            data: {\r\n              si: this.sifg.value,\r\n            },\r\n            disableClose: true,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.sifg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  beautifySlug(slug: string): void {\r\n    this.sifg.patchValue({\r\n      slug: slug.trim().toUpperCase(),\r\n    });\r\n  }\r\n}\r\n","<div class=\"container container-lifted\">\r\n    <div class=\"d-flex justify-content-center\">\r\n        <form [formGroup]=\"sifg\" (ngSubmit)=\"signIn($event)\">\r\n            <mat-card class=\"card-sign-in\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Sign In</mat-card-title>\r\n                    <mat-card-subtitle>Stay updated on your professional world with {{config.app.name}}\r\n                    </mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <!-- Slug -->\r\n                            <mat-form-field hintLabel=\"The one with admin\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Slug</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"8\" placeholder=\"AIR\" #slug\r\n                                    formControlName=\"slug\" (keyup)=\"beautifySlug(slug.value)\">\r\n                                <mat-hint align=\"end\">{{slug.value.length || 0}} / 8</mat-hint>\r\n                                <mat-error>Allowed a-Z</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <!-- Phone -->\r\n                            <mat-form-field hintLabel=\"The one that you have registered\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Phone</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"10\" placeholder=\"##########\" #phone\r\n                                    formControlName=\"phone\">\r\n                                <mat-hint align=\"end\">{{phone.value.length || 0}} / 10</mat-hint>\r\n                                <mat-error>Allowed 0-9</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-checkbox>\r\n                                Keep me signed in on this device\r\n                            </mat-checkbox>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"sse-container\">\r\n                                <p class=\"sse\" *ngIf=\"sse\">\r\n                                    {{sse}}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\" [disabled]=\"sifg.invalid\">\r\n                        Sign In\r\n                    </button>\r\n                </mat-card-actions>\r\n                <mat-card-header>\r\n                    <div mat-card-avatar class=\"brand-logo\"></div>\r\n                    <mat-card-title>{{config.app.name}}</mat-card-title>\r\n                    <mat-card-subtitle>{{config.app.tagline}}</mat-card-subtitle>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OTPComponent implements OnInit {\r\n  sse = '';\r\n\r\n  vfg: FormGroup = new FormGroup({\r\n    otp: new FormControl(\r\n      '000000',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[0-9]{6}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $router: Router,\r\n    private $bottomSheetRef: MatBottomSheetRef<OTPComponent>,\r\n    private $snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  verifyOTP(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.vfg.valid) {\r\n      this.sse = '';\r\n      this.vfg.disable();\r\n      this.$authentication.verifyOTP(this.data.si.phone, this.vfg.value.otp).subscribe(\r\n        () => {\r\n          this.$authentication.signIn(this.data.si).subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.vfg.enable();\r\n              this.$bottomSheetRef.dismiss();\r\n              this.$snackBar.open(result.message, '', {\r\n                duration: 3000,\r\n              });\r\n\r\n              this.$router.navigate(['/dashboard']);\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.vfg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.vfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-otp\">\r\n    <form [formGroup]=\"vfg\" (ngSubmit)=\"verifyOTP($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>Verify OTP</mat-card-title>\r\n            <mat-card-subtitle>Check you phone for OTP</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- OTP -->\r\n                    <mat-form-field hintLabel=\"The one that you registered\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>OTP</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"6\" placeholder=\"######\" #otp formControlName=\"otp\">\r\n                        <mat-hint align=\"end\">{{otp.value.length || 0}} / 6</mat-hint>\r\n                        <mat-error>Allowed 0-9</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-md-6\">\r\n                    <p>\r\n                        We have shared a 6 digit OTP with {{data.si.phone}}\r\n                    </p>\r\n                    <p>\r\n                        OTP is valid for only 2 mins\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                    <h1 class=\"mat-display-1 otp-clock\">01:59</h1>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\" [disabled]=\"vfg.invalid\">\r\n                Verify OTP\r\n            </button>\r\n        </mat-card-actions>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SignInComponent } from '@authentication/sign-in/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: SignInComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignInRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SignInRoutingModule } from '@authentication/sign-in/sign-in-routing.module';\r\nimport { SignInComponent } from '@authentication/sign-in/sign-in.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { OTPComponent } from '@authentication/sign-in/otp/otp.component';\r\nimport { SignOutComponent } from '@authentication/sign-in/sign-out/sign-out.component';\r\n\r\n@NgModule({\r\n  declarations: [SignInComponent, OTPComponent, SignOutComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SignInRoutingModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n  ]\r\n})\r\nexport class SignInModule { }\r\n"]}