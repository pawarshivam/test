{"version":3,"sources":["webpack:///src/app/admin/agendas/agendas.component.ts","webpack:///src/app/admin/agendas/agendas.component.html","webpack:///src/app/admin/agendas/agendas.module.ts","webpack:///src/app/admin/agendas/agenda-play/agenda-play.component.ts","webpack:///src/app/admin/agendas/agenda-play/agenda-play.component.html","webpack:///src/app/services/agenda.service.ts","webpack:///src/app/admin/agendas/agendas-routing.module.ts"],"names":["AgendasComponent","$agenda","$bottomSheet","breakpoints","atdc","atds","getAgendas","subscribe","agendas","data","agenda","open","agendaPlay","AgendasModule","AgendaPlayComponent","$authentication","$snackBar","$bottomSheetRef","config","sse","action","afg","label","required","pattern","dfg","patchValue","role","user","rp","id","disable","event","preventDefault","valid","addAgenda","value","enable","duration","dismiss","error","message","updateAgenda","deleteAgenda","play","AgendaService","$api","$init","$dirty","$agendas","dirty","get","result","next","getValue","length","put","patch","routes","path","component","AgendasRoutingModule","forChild"],"mappings":"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","file":"admin-agendas-agendas-module-es5.js","sourcesContent":["import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { AgendaService } from '@services/agenda.service';\r\nimport { AgendaModel } from '@models/agenda.model';\r\nimport { AgendaPlayComponent } from '@admin/agendas/agenda-play/agenda-play.component';\r\n\r\n@Component({\r\n  selector: 'app-agendas',\r\n  templateUrl: './agendas.component.html',\r\n  styleUrls: ['./agendas.component.css']\r\n})\r\nexport class AgendasComponent implements OnInit, AfterContentInit {\r\n  // Agendas table\r\n  atdc: string[] = ['id', 'label', 'action'];\r\n  atds: MatTableDataSource<AgendaModel>\r\n    =\r\n    new MatTableDataSource<AgendaModel>([]);\r\n\r\n  constructor(\r\n    private $agenda: AgendaService,\r\n    private $bottomSheet: MatBottomSheet,\r\n    public breakpoints: BreakPointsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getAgendas();\r\n  }\r\n\r\n  getAgendas(): void {\r\n    this.$agenda.getAgendas().subscribe(\r\n      (agendas: AgendaModel[]) => {\r\n        this.atds.data = agendas;\r\n      },\r\n    );\r\n  }\r\n\r\n  agendaPlay(agenda: AgendaModel | null): void {\r\n    this.$bottomSheet.open(AgendaPlayComponent, {\r\n      data: {\r\n        agenda,\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid container-cover container-agendas\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-lg-5\">\r\n            <!-- Agendas -->\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-title>Agendas</mat-card-title>\r\n                    <mat-card-subtitle>Puspose of visitor</mat-card-subtitle>\r\n\r\n                    <div class=\"spacer\"></div>\r\n\r\n                    <!-- Add -->\r\n                    <button mat-mini-fab class=\"mat-elevation-z\" (click)=\"agendaPlay(null)\">\r\n                        <img src=\"assets/images/add.svg\">\r\n                    </button>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"atds\">\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let agenda\">{{agenda.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Label Column -->\r\n                        <ng-container matColumnDef=\"label\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Label</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let agenda\">{{agenda.label}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Action Column -->\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let agenda\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" (click)=\"agendaPlay(agenda)\">\r\n                                    <img src=\"assets/images/edit.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"atdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: atdc\"></mat-row>\r\n                    </mat-table>\r\n                </mat-card-content>\r\n\r\n                <mat-card-footer>\r\n                    She said what you know about love?\r\n                </mat-card-footer>\r\n            </mat-card>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-lg-7\">\r\n           <mat-card></mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AgendasRoutingModule } from '@admin/agendas/agendas-routing.module';\r\nimport { AgendasComponent } from '@admin/agendas/agendas.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { AgendaPlayComponent } from '@admin/agendas/agenda-play/agenda-play.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AgendasComponent, AgendaPlayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AgendasRoutingModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class AgendasModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { AgendaService } from '@services/agenda.service';\r\nimport { AgendaModel } from '@models/agenda.model';\r\n\r\n@Component({\r\n  selector: 'app-agenda-play',\r\n  templateUrl: './agenda-play.component.html',\r\n  styleUrls: ['./agenda-play.component.css']\r\n})\r\nexport class AgendaPlayComponent implements OnInit {\r\n  sse = '';\r\n  action = '';\r\n\r\n  afg: FormGroup = new FormGroup({\r\n    label: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^.{1,25}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  dfg: FormGroup = new FormGroup({\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $agenda: AgendaService,\r\n    private $snackBar: MatSnackBar,\r\n    private $bottomSheetRef: MatBottomSheetRef<AgendaPlayComponent>,\r\n    public config: ConfigService,\r\n  ) {\r\n    if (data.agenda == null) {\r\n      this.action = 'Add';\r\n\r\n      this.dfg = new FormGroup({\r\n      });\r\n    } else {\r\n      this.action = 'Update';\r\n\r\n      this.dfg = new FormGroup({\r\n        label: new FormControl(\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(data.agenda.label),\r\n          ],\r\n        ),\r\n      });\r\n\r\n      this.afg.patchValue({\r\n        ...this.data.agenda,\r\n      });\r\n    }\r\n\r\n    // ACL\r\n    const role = this.$authentication.user?.role;\r\n\r\n    if (role) {\r\n      if (\r\n        (this.config.role.rp == role.id) == false\r\n      ) {\r\n        this.afg.disable();\r\n        this.dfg.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  play(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.afg.valid) {\r\n      this.sse = '';\r\n      this.afg.disable();\r\n      switch (this.action) {\r\n        case 'Add':\r\n          this.$agenda.addAgenda(this.afg.value).subscribe(\r\n            () => {\r\n              this.afg.enable();\r\n              this.$snackBar.open(`Agenda added`, '', {\r\n                duration: 3000,\r\n              });\r\n              this.$bottomSheetRef.dismiss();\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.afg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n        case 'Update':\r\n          this.$agenda.updateAgenda(this.data.agenda.id, this.afg.value).subscribe(\r\n            () => {\r\n              this.afg.enable();\r\n              this.$snackBar.open(`Agenda updated`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.afg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  delete(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.dfg.valid) {\r\n      this.sse = '';\r\n      this.dfg.disable();\r\n      this.$agenda.deleteAgenda(this.data.agenda.id).subscribe(\r\n        () => {\r\n          this.dfg.enable();\r\n          this.$snackBar.open(`Agenda and associated information deleted`, '', {\r\n            duration: 3000,\r\n          });\r\n          this.$bottomSheetRef.dismiss();\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.dfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-agendas\">\r\n    <form [formGroup]=\"afg\" (ngSubmit)=\"play($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{action}} Agenda</mat-card-title>\r\n            <mat-card-subtitle>Get low when the whistle go</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <!-- Label -->\r\n                    <mat-form-field hintLabel=\"What it is called\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"30\" placeholder=\"Main\" #label formControlName=\"label\">\r\n                        <mat-hint align=\"end\">{{label.value.length || 0}} / 30</mat-hint>\r\n                        <mat-error>Allowed a-Z, 0-9</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\"\r\n                [disabled]=\"afg.invalid || afg.disabled\">{{action}}</button>\r\n        </mat-card-actions>\r\n    </form>\r\n\r\n    <ng-container *ngIf=\"action == 'Update'\">\r\n        <form [formGroup]=\"dfg\" (ngSubmit)=\"delete($event)\">\r\n            <mat-card-header>\r\n                <mat-card-title>Delete Department</mat-card-title>\r\n                <mat-card-subtitle>This action is irreversible</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <!-- Label -->\r\n                        <mat-form-field [hintLabel]=\"data.agenda.label\" appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Label</mat-label>\r\n                            <input type=\"text\" matInput maxlength=\"30\" placeholder=\"Main\" #label\r\n                                formControlName=\"label\">\r\n                            <mat-hint align=\"end\">{{label.value.length || 0}} / 30</mat-hint>\r\n                            <mat-error>Provided and subject's label do not match</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <mat-error>\r\n                            Deleting a agenda will result into deleting of all the information associated with\r\n                            the agenda. This action cannot be undone. Provide the agenda's label to confirm your\r\n                            intention\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"sse-container\">\r\n                            <p class=\"sse\" *ngIf=\"sse\">\r\n                                {{sse}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions>\r\n                <button mat-flat-button color=\"warn\" class=\"w-100\" type=\"submit\"\r\n                    [disabled]=\"dfg.invalid || dfg.disabled\">\r\n                    Delete\r\n                </button>\r\n            </mat-card-actions>\r\n        </form>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService } from '@services/api.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { AgendaModel } from '@models/agenda.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgendaService {\r\n  $init = false;\r\n  $dirty: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $agendas: BehaviorSubject<AgendaModel[]> = new BehaviorSubject<AgendaModel[]>([]);\r\n\r\n  constructor(private $api: ApiService) {\r\n    this.$dirty.subscribe(\r\n      (dirty: boolean) => {\r\n        if (dirty) {\r\n          this.$api.get('/agenda/all').subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.$dirty.next(false);\r\n\r\n              this.$agendas.next(\r\n                result.data.agendas\r\n              );\r\n            },\r\n            (error: HttpResponseModel) => {\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getAgendas(): Observable<AgendaModel[]> {\r\n    if (this.$init === false || (this.$agendas.getValue().length === 0 && this.$dirty.getValue() === false)) {\r\n      this.$init = true;\r\n\r\n      this.$dirty.next(true);\r\n    }\r\n\r\n    return this.$agendas;\r\n  }\r\n\r\n  addAgenda(agenda: any): Observable<HttpResponseModel> {\r\n    return this.$api.put('/agenda', {\r\n      agenda,\r\n    });\r\n  }\r\n\r\n  updateAgenda(id: number, agenda: any): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/agenda/${id}`, {\r\n      agenda,\r\n    });\r\n  }\r\n\r\n  deleteAgenda(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/agenda/${id}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AgendasComponent } from '@admin/agendas/agendas.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AgendasComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AgendasRoutingModule { }\r\n"]}