{"version":3,"sources":["webpack:///src/app/admin/feedbacks/feedbacks.module.ts","webpack:///src/app/admin/feedbacks/feedback-play/feedback-play.component.ts","webpack:///src/app/admin/feedbacks/feedback-play/feedback-play.component.html","webpack:///src/app/admin/feedbacks/feedbacks-routing.module.ts","webpack:///src/app/admin/feedbacks/feedbacks.component.ts","webpack:///src/app/admin/feedbacks/feedbacks.component.html","webpack:///src/app/admin/feedbacks/enumeration-play/enumeration-play.component.ts","webpack:///src/app/admin/feedbacks/enumeration-play/enumeration-play.component.html","webpack:///src/app/services/feedback.service.ts","webpack:///src/app/services/enumeration.service.ts"],"names":["FeedbacksModule","FeedbackPlayComponent","data","$authentication","$feedback","$enumeration","$snackBar","$bottomSheetRef","config","sse","action","enumerations","ffg","question","required","pattern","enumeration_ids","feedback","dfg","patchValue","role","user","rp","id","disable","getEnumerations","subscribe","event","preventDefault","valid","addFeedback","value","result","enable","open","duration","dismiss","error","message","updateFeedback","deleteFeedback","play","routes","path","component","FeedbacksRoutingModule","forChild","FeedbacksComponent","$bottomSheet","breakpoints","ftdc","ftds","etdc","etds","getFeedbacks","feedbacks","enumeration","enumerationPlay","EnumerationPlayComponent","efg","label","addEnumeration","updateEnumeration","deleteEnumeration","FeedbackService","$api","$init","$dirty","$feedbacks","dirty","get","next","getValue","length","put","pipe","patch","EnumerationService","$enumerations"],"mappings":"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","file":"admin-feedbacks-feedbacks-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FeedbacksRoutingModule } from '@admin/feedbacks/feedbacks-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeedbackPlayComponent } from '@admin/feedbacks/feedback-play/feedback-play.component';\r\nimport { FeedbacksComponent } from '@admin/feedbacks/feedbacks.component';\r\nimport { EnumerationPlayComponent } from '@admin/feedbacks/enumeration-play/enumeration-play.component';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FeedbacksComponent, FeedbackPlayComponent, EnumerationPlayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FeedbacksRoutingModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class FeedbacksModule { }\r\n","import { AfterContentInit, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FeedbackModel } from '@models/feedback.model';\r\nimport { EnumerationModel } from '@models/enumeration.model';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { FeedbackService } from '@services/feedback.service';\r\nimport { EnumerationService } from '@services/enumeration.service';\r\n\r\n@Component({\r\n  selector: 'app-feedback-play',\r\n  templateUrl: './feedback-play.component.html',\r\n  styleUrls: ['./feedback-play.component.css']\r\n})\r\nexport class FeedbackPlayComponent implements OnInit, AfterContentInit {\r\n  sse = '';\r\n  action = '';\r\n\r\n  enumerations: EnumerationModel[] = [];\r\n\r\n  ffg: FormGroup = new FormGroup({\r\n    question: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^.{1,125}$/),\r\n      ],\r\n    ),\r\n    enumeration_ids: new FormControl(\r\n      [],\r\n      [\r\n      ],\r\n    ),\r\n  });\r\n\r\n  dfg: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $feedback: FeedbackService,\r\n    private $enumeration: EnumerationService,\r\n    private $snackBar: MatSnackBar,\r\n    private $bottomSheetRef: MatBottomSheetRef<FeedbackPlayComponent>,\r\n    public config: ConfigService,\r\n  ) {\r\n    if (data.feedback == null) {\r\n      this.action = 'Add';\r\n\r\n      this.dfg = new FormGroup({\r\n      });\r\n    } else {\r\n      this.action = 'Update';\r\n\r\n      this.dfg = new FormGroup({\r\n        question: new FormControl(\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(data.feedback.question),\r\n          ],\r\n        ),\r\n      });\r\n\r\n      this.ffg.patchValue({\r\n        ...this.data.feedback,\r\n      });\r\n    }\r\n\r\n    // ACL\r\n    const role = this.$authentication.user?.role;\r\n\r\n    if (role) {\r\n      if (\r\n        (this.config.role.rp == role.id) == false\r\n      ) {\r\n        this.ffg.disable();\r\n        this.dfg.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getEnumerations();\r\n  }\r\n\r\n  getEnumerations(): void {\r\n    this.$enumeration\r\n      .getEnumerations()\r\n      .subscribe((enumerations: EnumerationModel[]) => {\r\n        this.enumerations = enumerations;\r\n      });\r\n  }\r\n\r\n\r\n  play(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.ffg.valid) {\r\n      this.sse = '';\r\n      this.ffg.disable();\r\n      switch (this.action) {\r\n        case 'Add':\r\n          this.$feedback.addFeedback(this.ffg.value).subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.ffg.enable();\r\n              this.$snackBar.open(`Feedback added`, '', {\r\n                duration: 3000,\r\n              });\r\n              this.$bottomSheetRef.dismiss();\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.ffg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n        case 'Update':\r\n          this.$feedback.updateFeedback(this.data.feedback.id, this.ffg.value).subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.ffg.enable();\r\n              this.$snackBar.open(`Feedback updated`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.ffg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  delete(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.dfg.valid) {\r\n      this.sse = '';\r\n      this.dfg.disable();\r\n      this.$feedback.deleteFeedback(this.data.feedback.id).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.dfg.enable();\r\n          this.$snackBar.open(`Feedback and associated information deleted`, '', {\r\n            duration: 3000,\r\n          });\r\n          this.$bottomSheetRef.dismiss();\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.dfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-feedback\">\r\n    <form [formGroup]=\"ffg\" (ngSubmit)=\"play($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{action}} Feedback</mat-card-title>\r\n            <mat-card-subtitle>Get low when the whistle go</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <!-- Question -->\r\n                    <mat-form-field hintLabel=\"What is you want to ask\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Question</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"125\" placeholder=\"Your experience?\" #question formControlName=\"question\">\r\n                        <mat-hint align=\"end\">{{question.value.length || 0}} / 125</mat-hint>\r\n                        <mat-error>Allowed a-Z, 0-9, ?</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <!-- Enumerations -->\r\n                    <mat-form-field hintLabel=\"Enumerations\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Enumerations</mat-label>\r\n                        <mat-select #enumeration_ids formControlName=\"enumeration_ids\" multiple>\r\n                            <mat-option *ngFor=\"let enumeration of enumerations\" [value]=\"enumeration.id\">\r\n                                {{enumeration.label}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\"\r\n                [disabled]=\"ffg.invalid || ffg.disabled\">{{action}}</button>\r\n        </mat-card-actions>\r\n    </form>\r\n\r\n    <ng-container *ngIf=\"action == 'Update'\">\r\n        <form [formGroup]=\"dfg\" (ngSubmit)=\"delete($event)\">\r\n            <mat-card-header>\r\n                <mat-card-title>Delete Feedback</mat-card-title>\r\n                <mat-card-subtitle>This action is irreversible</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <!-- Question -->\r\n                        <mat-form-field [hintLabel]=\"data.feedback.question\" appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Question</mat-label>\r\n                            <input type=\"text\" matInput maxlength=\"90\" placeholder=\"Main\" #question formControlName=\"question\">\r\n                            <mat-hint align=\"end\">{{question.value.length || 0}} / 90</mat-hint>\r\n                            <mat-error>Provided and subject's question do not match</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <mat-error>\r\n                            Deleting a feedback will result into deleting of all the information associated with\r\n                            the feedback. This action cannot be undone. Provide the feedback's name to confirm your\r\n                            intention\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"sse-container\">\r\n                            <p class=\"sse\" *ngIf=\"sse\">\r\n                                {{sse}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions>\r\n                <button mat-flat-button color=\"warn\" class=\"w-100\" type=\"submit\"\r\n                    [disabled]=\"dfg.invalid || dfg.disabled\">\r\n                    Delete\r\n                </button>\r\n            </mat-card-actions>\r\n        </form>\r\n    </ng-container>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FeedbacksComponent } from '@admin/feedbacks/feedbacks.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: FeedbacksComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FeedbacksRoutingModule { }\r\n","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FeedbackModel } from '@models/feedback.model';\r\nimport { EnumerationModel } from '@models/enumeration.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { EnumerationService } from '@services/enumeration.service';\r\nimport { EnumerationPlayComponent } from '@admin/feedbacks/enumeration-play/enumeration-play.component';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { FeedbackService } from '@services/feedback.service';\r\nimport { FeedbackPlayComponent } from '@admin/feedbacks/feedback-play/feedback-play.component';\r\n\r\n@Component({\r\n  selector: 'app-feedbacks',\r\n  templateUrl: './feedbacks.component.html',\r\n  styleUrls: ['./feedbacks.component.css']\r\n})\r\nexport class FeedbacksComponent implements OnInit, AfterContentInit {\r\n  // Feedbacks table\r\n  ftdc: string[] = ['id', 'question', 'enumerations', 'action'];\r\n  ftds: MatTableDataSource<FeedbackModel>\r\n    =\r\n    new MatTableDataSource<FeedbackModel>([]);\r\n\r\n\r\n  // Enumerations table\r\n  etdc: string[] = ['id', 'label', 'action'];\r\n  etds: MatTableDataSource<EnumerationModel>\r\n    =\r\n    new MatTableDataSource<EnumerationModel>([]);\r\n\r\n  constructor(\r\n    private $feedback: FeedbackService,\r\n    private $enumeration: EnumerationService,\r\n    private $bottomSheet: MatBottomSheet,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getFeedbacks();\r\n    this.getEnumerations();\r\n  }\r\n\r\n  getFeedbacks(): void {\r\n    this.$feedback.getFeedbacks().subscribe(\r\n      (feedbacks: FeedbackModel[]) => {\r\n        this.ftds.data = feedbacks;\r\n      },\r\n    );\r\n  }\r\n\r\n  getEnumerations(): void {\r\n    this.$enumeration.getEnumerations().subscribe(\r\n      (enumerations: EnumerationModel[]) => {\r\n        this.etds.data = enumerations;\r\n      },\r\n    );\r\n  }\r\n\r\n  feedbackPlay(feedback: FeedbackModel | null): void {\r\n    this.$bottomSheet.open(FeedbackPlayComponent, {\r\n      data: {\r\n        feedback,\r\n      }\r\n    });\r\n  }\r\n\r\n  enumerationPlay(enumeration: EnumerationModel | null): void {\r\n    this.$bottomSheet.open(EnumerationPlayComponent, {\r\n      data: {\r\n        enumeration,\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid container-cover container-feedbacks\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-lg-7\">\r\n            <!-- Feedbacks -->\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-title>Feedbacks</mat-card-title>\r\n                    <mat-card-subtitle>List of feedbacks that visitor supplies</mat-card-subtitle>\r\n\r\n                    <div class=\"spacer\"></div>\r\n\r\n                    <!-- Add -->\r\n                    <button mat-mini-fab class=\"mat-elevation-z\" (click)=\"feedbackPlay(null)\" *ngIf=\"breakpoints.isMD == false\">\r\n                        <img src=\"assets/images/add.svg\">\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" (click)=\"feedbackPlay(null)\" *ngIf=\"breakpoints.isMD == true\">\r\n                        Add Feedback\r\n                    </button>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"ftds\">\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let feedback\">{{feedback.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Question Column -->\r\n                        <ng-container matColumnDef=\"question\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Question</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let feedback\">{{feedback.question}}</mat-cell>\r\n                        </ng-container>\r\n                       \r\n                        <!-- Enumerations Column -->\r\n                        <ng-container matColumnDef=\"enumerations\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Enumerations</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let feedback\">{{feedback.enumerations.length}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Action Column -->\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let feedback\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" (click)=\"feedbackPlay(feedback)\">\r\n                                    <img src=\"assets/images/edit.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"ftdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: ftdc\"></mat-row>\r\n                    </mat-table>\r\n                </mat-card-content>\r\n                <mat-card-footer>\r\n                    She said what you know about love?\r\n                </mat-card-footer>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"col-12 col-lg-5\">\r\n            <!-- Enumerations -->\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-title>Enumerations</mat-card-title>\r\n                    <mat-card-subtitle>Associated with the defined feedbacks</mat-card-subtitle>\r\n\r\n                    <div class=\"spacer\"></div>\r\n                    \r\n                    <!-- Add -->\r\n                    <button mat-mini-fab class=\"mat-elevation-z\" (click)=\"enumerationPlay(null)\">\r\n                        <img src=\"assets/images/add.svg\">\r\n                    </button>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"etds\">\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let enumeration\">{{enumeration.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Label Column -->\r\n                        <ng-container matColumnDef=\"label\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Label</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let enumeration\">{{enumeration.label}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Action Column -->\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let enumeration\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" (click)=\"enumerationPlay(enumeration)\">\r\n                                    <img src=\"assets/images/edit.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"etdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: etdc\"></mat-row>\r\n                    </mat-table>\r\n                </mat-card-content>\r\n\r\n                <mat-card-footer>\r\n                    She said what you know about love?\r\n                </mat-card-footer>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EnumerationModel } from '@models/enumeration.model';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { EnumerationService } from '@services/enumeration.service';\r\n\r\n@Component({\r\n  selector: 'app-enumeration-play',\r\n  templateUrl: './enumeration-play.component.html',\r\n  styleUrls: ['./enumeration-play.component.css']\r\n})\r\nexport class EnumerationPlayComponent implements OnInit {\r\n  sse = '';\r\n  action = '';\r\n\r\n  efg: FormGroup = new FormGroup({\r\n    label: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]{1,25}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  dfg: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $enumeration: EnumerationService,\r\n    private $snackBar: MatSnackBar,\r\n    private $bottomSheetRef: MatBottomSheetRef<EnumerationPlayComponent>,\r\n    public config: ConfigService,\r\n  ) {\r\n    if (data.enumeration == null) {\r\n      this.action = 'Add';\r\n\r\n      this.dfg = new FormGroup({\r\n      });\r\n    } else {\r\n      this.action = 'Update';\r\n\r\n      this.dfg = new FormGroup({\r\n        label: new FormControl(\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(data.enumeration.label),\r\n          ],\r\n        ),\r\n      });\r\n\r\n      this.efg.patchValue({\r\n        ...this.data.enumeration,\r\n      });\r\n    }\r\n\r\n    // ACL\r\n    const role = this.$authentication.user?.role;\r\n\r\n    if (role) {\r\n      if (\r\n        (this.config.role.rp == role.id) == false\r\n      ) {\r\n        this.efg.disable();\r\n        this.dfg.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  play(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.efg.valid) {\r\n      this.sse = '';\r\n      this.efg.disable();\r\n      switch (this.action) {\r\n        case 'Add':\r\n          this.$enumeration.addEnumeration(this.efg.value).subscribe(\r\n            () => {\r\n              this.efg.enable();\r\n              this.$snackBar.open(`Enumeration added`, '', {\r\n                duration: 3000,\r\n              });\r\n              this.$bottomSheetRef.dismiss();\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.efg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n        case 'Update':\r\n          this.$enumeration.updateEnumeration(this.data.enumeration.id, this.efg.value).subscribe(\r\n            () => {\r\n              this.efg.enable();\r\n              this.$snackBar.open(`Enumeration updated`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.efg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  delete(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.dfg.valid) {\r\n      this.sse = '';\r\n      this.dfg.disable();\r\n      this.$enumeration.deleteEnumeration(this.data.enumeration.id).subscribe(\r\n        () => {\r\n          this.dfg.enable();\r\n          this.$snackBar.open(`Enumeration and associated information deleted`, '', {\r\n            duration: 3000,\r\n          });\r\n          this.$bottomSheetRef.dismiss();\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.dfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-enumeration\">\r\n    <form [formGroup]=\"efg\" (ngSubmit)=\"play($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{action}} Enumeration</mat-card-title>\r\n            <mat-card-subtitle>Get low when the whistle go</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <!-- Label -->\r\n                    <mat-form-field hintLabel=\"What it is called\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"30\" placeholder=\"Main\" #label formControlName=\"label\">\r\n                        <mat-hint align=\"end\">{{label.value.length || 0}} / 30</mat-hint>\r\n                        <mat-error>Allowed a-Z, 0-9</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\"\r\n                [disabled]=\"efg.invalid || efg.disabled\">{{action}}</button>\r\n        </mat-card-actions>\r\n    </form>\r\n\r\n    <ng-container *ngIf=\"action == 'Update'\">\r\n        <form [formGroup]=\"dfg\" (ngSubmit)=\"delete($event)\">\r\n            <mat-card-header>\r\n                <mat-card-title>Delete Enumeration</mat-card-title>\r\n                <mat-card-subtitle>This action is irreversible</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <!-- Label -->\r\n                        <mat-form-field [hintLabel]=\"data.enumeration.label\" appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Label</mat-label>\r\n                            <input type=\"text\" matInput maxlength=\"25\" placeholder=\"Main\" #label formControlName=\"label\">\r\n                            <mat-hint align=\"end\">{{label.value.length || 0}} / 25</mat-hint>\r\n                            <mat-error>Provided and subject's label do not match</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <mat-error>\r\n                            Deleting a enumeration will result into deleting of all the information associated with\r\n                            the enumeration. This action cannot be undone. Provide the enumeration's label to confirm your\r\n                            intention\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"sse-container\">\r\n                            <p class=\"sse\" *ngIf=\"sse\">\r\n                                {{sse}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions>\r\n                <button mat-flat-button color=\"warn\" class=\"w-100\" type=\"submit\" [disabled]=\"dfg.invalid || dfg.disabled\">\r\n                    Delete\r\n                </button>\r\n            </mat-card-actions>\r\n        </form>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { FeedbackModel } from '@models/feedback.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService } from '@services/api.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n  $init = false;\r\n  $dirty: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $feedbacks: BehaviorSubject<FeedbackModel[]> = new BehaviorSubject<FeedbackModel[]>([]);\r\n\r\n  constructor(private $api: ApiService) {\r\n    this.$dirty.subscribe(\r\n      (dirty: boolean) => {\r\n        if (dirty) {\r\n          this.$api.get('/feedback/all').subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.$dirty.next(false);\r\n\r\n              this.$feedbacks.next(\r\n                result.data.feedbacks\r\n              );\r\n            },\r\n            (error: HttpResponseModel) => {\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getFeedbacks(): Observable<FeedbackModel[]> {\r\n    if (this.$init === false || (this.$feedbacks.getValue().length === 0 && this.$dirty.getValue() === false)) {\r\n      this.$init = true;\r\n\r\n      this.$dirty.next(true);\r\n    }\r\n\r\n    return this.$feedbacks;\r\n  }\r\n\r\n  addFeedback(feedback: any): Observable<HttpResponseModel> {\r\n    return this.$api.put('/feedback', {\r\n      feedback,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.$dirty.next(true);\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  updateFeedback(id: number, feedback: any): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/feedback/${id}`, {\r\n      feedback,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.$dirty.next(true);\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  deleteFeedback(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/feedback/${id}`).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.$dirty.next(true);\r\n        return result;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { EnumerationModel } from '@models/enumeration.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService } from '@services/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnumerationService {\r\n  $init = false;\r\n  $dirty: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $enumerations: BehaviorSubject<EnumerationModel[]> = new BehaviorSubject<EnumerationModel[]>([]);\r\n\r\n  constructor(private $api: ApiService) {\r\n    this.$dirty.subscribe(\r\n      (dirty: boolean) => {\r\n        if (dirty) {\r\n          this.$api.get('/enumeration/all').subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.$dirty.next(false);\r\n\r\n              this.$enumerations.next(\r\n                result.data.enumerations\r\n              );\r\n            },\r\n            (error: HttpResponseModel) => {\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getEnumerations(): Observable<EnumerationModel[]> {\r\n    if (this.$init === false || (this.$enumerations.getValue().length === 0 && this.$dirty.getValue() === false)) {\r\n      this.$init = true;\r\n\r\n      this.$dirty.next(true);\r\n    }\r\n\r\n    return this.$enumerations;\r\n  }\r\n\r\n  addEnumeration(enumeration: any): Observable<HttpResponseModel> {\r\n    return this.$api\r\n      .put('/enumeration', {\r\n        enumeration,\r\n      });\r\n  }\r\n\r\n  updateEnumeration(\r\n    id: number,\r\n    enumeration: any\r\n  ): Observable<HttpResponseModel> {\r\n    return this.$api\r\n      .patch(`/enumeration/${id}`, {\r\n        enumeration,\r\n      });\r\n  }\r\n\r\n  deleteEnumeration(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/enumeration/${id}`);\r\n  }\r\n}\r\n"]}