{"version":3,"sources":["webpack:///src/app/services/department.service.ts"],"names":["DepartmentService","$api","$init","$dirty","$departments","subscribe","dirty","get","result","next","data","departments","error","getValue","length","slug","pipe","department","put","id","patch"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,iB;AAKX,mCAAoBC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB,eAAAC,KAAA,GAAQ,KAAR;AACA,eAAAC,MAAA,GAAmC,IAAI,oDAAJ,CAA6B,KAA7B,CAAnC;AACA,eAAAC,YAAA,GAAmD,IAAI,oDAAJ,CAAuC,EAAvC,CAAnD;AAGE,eAAKD,MAAL,CAAYE,SAAZ,CACE,UAACC,KAAD,EAAoB;AAClB,gBAAIA,KAAJ,EAAW;AACT,mBAAI,CAACL,IAAL,CAAUM,GAAV,CAAc,iBAAd,EAAiCF,SAAjC,CACE,UAACG,MAAD,EAA+B;AAC7B,qBAAI,CAACL,MAAL,CAAYM,IAAZ,CAAiB,KAAjB;;AAEA,qBAAI,CAACL,YAAL,CAAkBK,IAAlB,CACED,MAAM,CAACE,IAAP,CAAYC,WADd;AAGD,eAPH,EAQE,UAACC,KAAD,EAA8B,CAC7B,CATH;AAWD;AACF,WAfH;AAiBD;;;;iBAED,0BAAc;AACZ,gBAAI,KAAKV,KAAL,KAAe,KAAf,IAAyB,KAAKE,YAAL,CAAkBS,QAAlB,GAA6BC,MAA7B,KAAwC,CAAxC,IAA6C,KAAKX,MAAL,CAAYU,QAAZ,OAA2B,KAArG,EAA6G;AAC3G,mBAAKX,KAAL,GAAa,IAAb;AAEA,mBAAKC,MAAL,CAAYM,IAAZ,CAAiB,IAAjB;AACD;;AAED,mBAAO,KAAKL,YAAZ;AACD;;;iBAED,iCAAwBW,IAAxB,EAAoC;AAClC,mBAAO,KAAKd,IAAL,CAAUM,GAAV,mCAAyCQ,IAAzC,GAAiDC,IAAjD,CACL,2DAAI,UAACR,MAAD;AAAA,qBAAkDA,MAAM,CAACE,IAAP,CAAYC,WAA9D;AAAA,aAAJ,CADK,CAAP;AAED;;;iBAED,uBAAcM,UAAd,EAA6B;AAC3B,mBAAO,KAAKhB,IAAL,CAAUiB,GAAV,CAAc,aAAd,EAA6B;AAClCD,wBAAU,EAAVA;AADkC,aAA7B,CAAP;AAGD;;;iBAED,0BAAiBE,EAAjB,EAA6BF,UAA7B,EAA4C;AAC1C,mBAAO,KAAKhB,IAAL,CAAUmB,KAAV,uBAA+BD,EAA/B,GAAqC;AAC1CF,wBAAU,EAAVA;AAD0C,aAArC,CAAP;AAGD;;;iBAED,0BAAiBE,EAAjB,EAA2B;AACzB,mBAAO,KAAKlB,IAAL,iCAAgCkB,EAAhC,EAAP;AACD;;;;;;;yBAtDUnB,iB,EAAiB,wH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { DepartmentModel } from '@models/department.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService } from '@services/api.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentService {\r\n  $init = false;\r\n  $dirty: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $departments: BehaviorSubject<DepartmentModel[]> = new BehaviorSubject<DepartmentModel[]>([]);\r\n\r\n  constructor(private $api: ApiService) {\r\n    this.$dirty.subscribe(\r\n      (dirty: boolean) => {\r\n        if (dirty) {\r\n          this.$api.get('/department/all').subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.$dirty.next(false);\r\n\r\n              this.$departments.next(\r\n                result.data.departments\r\n              );\r\n            },\r\n            (error: HttpResponseModel) => {\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getDepartments(): Observable<DepartmentModel[]> {\r\n    if (this.$init === false || (this.$departments.getValue().length === 0 && this.$dirty.getValue() === false)) {\r\n      this.$init = true;\r\n\r\n      this.$dirty.next(true);\r\n    }\r\n\r\n    return this.$departments;\r\n  }\r\n\r\n  getDepartmentsSlugified(slug: string): Observable<DepartmentModel[]> {\r\n    return this.$api.get(`/department/all/slugify/${slug}`).pipe(\r\n      map((result: HttpResponseModel): DepartmentModel[] => result.data.departments));\r\n  }\r\n\r\n  addDepartment(department: any): Observable<HttpResponseModel> {\r\n    return this.$api.put('/department', {\r\n      department,\r\n    });\r\n  }\r\n\r\n  updateDepartment(id: number, department: any): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/department/${id}`, {\r\n      department,\r\n    });\r\n  }\r\n\r\n  deleteDepartment(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/department/${id}`);\r\n  }\r\n}\r\n"]}