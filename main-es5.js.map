{"version":3,"sources":["webpack:///src/app/services/breakpoints.service.ts","webpack:///src/app/services/org.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/csv/csv.component.ts","webpack:///src/app/csv/csv.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/confirm/confirm.component.ts","webpack:///src/app/confirm/confirm.component.html","webpack:///src/app/services/config.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BreakPointsService","breakpointObserver","isMD","isMatched","OrgService","$api","$authentication","config","$lrt","$wrt","logo","fd","FormData","append","upload","pipe","result","wallpaper","org","user","api","url","id","environment","production","ApiService","$http","headers","token","localStorage","setItem","authorization","removeItem","route","data","console","log","post","status","message","handleError","put","patch","get","error","ErrorEvent","CSVComponent","$dialog","$snackBar","sse","navigator","clipboard","writeText","path","then","open","duration","close","window","copyLink","openLink","AppComponent","$router","breakpoints","authenticated","subscribe","signOut","navigate","name","profilePath","options","AppModule","forRoot","AuthenticationService","$authenticated","$user","$rt","getItem","JSON","parse","tokenize","next","verifyUser","detox","phone","twofa","otp","stringify","profile","detokenize","NavigationComponent","$org","getValue","role","ra","rp","logoPath","ConfirmComponent","ConfigService","app","tagline","developer","rt","rs","rh","statuses","label","routes","redirectTo","pathMatch","loadChildren","module","HomeModule","AuthenticationModule","DashboardModule","ProfileModule","AdminModule","AppRoutingModule","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BreakPointsService {\r\n  isMD: boolean;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {\r\n    this.isMD = this.breakpointObserver.isMatched('(min-width: 768px)');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { ApiService } from '@services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrgService {\r\n    $lrt = 0;\r\n    $wrt = 0;\r\n\r\n    constructor(\r\n        private $api: ApiService,\r\n        private $authentication: AuthenticationService,\r\n        public config: ConfigService,\r\n    ) {\r\n    }\r\n\r\n    uploadLogo(logo: File): Observable<HttpResponseModel> {\r\n        const fd = new FormData();\r\n\r\n        fd.append('file', logo);\r\n\r\n        return this.$api.upload(fd, '/logo').pipe(\r\n            map((result: HttpResponseModel): HttpResponseModel => {\r\n                this.$lrt = this.$lrt + 1;\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    uploadWallpaper(wallpaper: File): Observable<HttpResponseModel> {\r\n        const fd = new FormData();\r\n\r\n        fd.append('file', wallpaper);\r\n\r\n        return this.$api.upload(fd, '/wallpaper').pipe(\r\n            map((result: HttpResponseModel): HttpResponseModel => {\r\n                this.$wrt = this.$wrt + 1;\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    get logoPath(): string {\r\n        const org = this.$authentication.user?.org;\r\n        if (org) {\r\n            return `${this.config.api.url}/logo/${org.id}/${this.$lrt}`;\r\n        }\r\n        return `${this.config.api.url}/logo/${this.$lrt}`;\r\n    }\r\n\r\n    get wallpaperPath(): string {\r\n        const org = this.$authentication.user?.org;\r\n        if (org) {\r\n            return `${this.config.api.url}/wallpaper/${org.id}/${this.$lrt}`;\r\n        }\r\n        return `${this.config.api.url}/wallpaper/${this.$lrt}`;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError, map } from 'rxjs/operators';\r\nimport { ConfigService } from '@services/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  // Headers\r\n  headers: any = {\r\n  };\r\n\r\n  constructor(\r\n    private $http: HttpClient,\r\n    public config: ConfigService,\r\n  ) {\r\n  }\r\n\r\n  tokenize(token: string): void {\r\n    localStorage.setItem('token', token);\r\n    this.headers.authorization = token;\r\n  }\r\n\r\n  detokenize(): void {\r\n    localStorage.removeItem('token');\r\n    this.headers.authorization = '';\r\n  }\r\n\r\n  post(route: string, data: any): Observable<HttpResponseModel> {\r\n    console.log('POST', route);\r\n    return this.$http.post<HttpResponseModel>(`${this.config.api.url}${route}`, data,\r\n      {\r\n        headers: new HttpHeaders(this.headers),\r\n      }).pipe(\r\n        map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n        retry(0),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n  put(route: string, data: any): Observable<HttpResponseModel> {\r\n    console.log('PUT', route);\r\n    return this.$http.put<HttpResponseModel>(`${this.config.api.url}${route}`, data,\r\n      {\r\n        headers: new HttpHeaders(this.headers),\r\n      }).pipe(\r\n        map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n        retry(1),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n  patch(route: string, data: any): Observable<HttpResponseModel> {\r\n    console.log('PATCH', route);\r\n    return this.$http.patch<HttpResponseModel>(`${this.config.api.url}${route}`, data,\r\n      {\r\n        headers: new HttpHeaders(this.headers),\r\n      }).pipe(\r\n        map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n        retry(1),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n\r\n  delete(route: string): Observable<HttpResponseModel> {\r\n    console.log('DELETE', route);\r\n    return this.$http.delete<HttpResponseModel>(`${this.config.api.url}${route}`,\r\n      {\r\n        headers: new HttpHeaders(this.headers),\r\n      }).pipe(\r\n        map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n        retry(0),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n  get(route: string): Observable<HttpResponseModel> {\r\n    console.log('GET', route);\r\n    return this.$http.get<HttpResponseModel>(`${this.config.api.url}${route}`,\r\n      {\r\n        headers: new HttpHeaders(this.headers),\r\n      }).pipe(\r\n        map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n        retry(1),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n  upload(fd: FormData, route: string): Observable<HttpResponseModel> {\r\n    console.log('UPLOAD', route);\r\n\r\n    return this.$http.post<HttpResponseModel>(`${this.config.api.url}${route}`, fd, {\r\n      headers: new HttpHeaders(\r\n        this.headers\r\n      ),\r\n    }).pipe(\r\n      map((result: any): HttpResponseModel => ({\r\n          status: 200,\r\n          data: result.data,\r\n          message: result.message,\r\n        })),\r\n      retry(0),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  /**\r\n   * App level error handling\r\n   */\r\n  handleError(error: HttpErrorResponse) {\r\n    let message: string;\r\n    let data: any;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      // CSE\r\n      message = error.error.message;\r\n      data = {};\r\n      console.error(message);\r\n    } else {\r\n      // SSE\r\n      if (error.status === 0) {\r\n        message = `HTTP request failed for requested url ${error.url}`;\r\n        data = {};\r\n      } else {\r\n        message = error.error.message;\r\n        data = error.error.data;\r\n      }\r\n      console.error(error.status, message);\r\n    }\r\n\r\n    return throwError({\r\n      status: error.status || 0,\r\n      message,\r\n      data,\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-csv',\r\n  templateUrl: './csv.component.html',\r\n  styleUrls: ['./csv.component.css']\r\n})\r\nexport class CSVComponent implements OnInit {\r\n  sse = '';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private $dialog: MatDialogRef<CSVComponent>,\r\n    private $snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  copyLink(): void {\r\n    navigator.clipboard.writeText(this.data.path).then(\r\n      (result) => {\r\n        this.$snackBar.open('Link copied to your clipboard', '', {\r\n          duration: 3000,\r\n        });\r\n\r\n        this.$dialog.close();\r\n      },\r\n      (error) => {\r\n        this.sse = 'Failed to copy the link to your clipboard';\r\n      },\r\n    );\r\n  }\r\n\r\n  openLink(): void {\r\n    window.open(this.data.path);\r\n    this.$dialog.close();\r\n  }\r\n}\r\n","<h1 class=\"mat-h1\" mat-dialog-title>File Ready</h1>\r\n<div mat-dialog-content>\r\n    <p>This link is active for only 30 minutes</p>\r\n    <p class=\"csv-link\">{{data.path}}</p>\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button (click)=\"copyLink()\" cdkFocusInitial>Copy Link</button>\r\n    <button mat-button (click)=\"openLink()\">Open Link</button>\r\n</div>","<mat-drawer-container>\r\n    <mat-drawer #drawer [mode]=\"breakpoints.isMD ? 'side' : 'over'\" [opened]=\"breakpoints.isMD\">\r\n        <app-navigation></app-navigation>\r\n    </mat-drawer>\r\n\r\n    <mat-drawer-content class=\"bg-dotted\">\r\n        <header class=\"bg-header\">\r\n            <!-- Toolbar -->\r\n            <mat-toolbar class=\"mat-elevation-z\">\r\n                <!-- Brand -->\r\n                <img src=\"assets/images/logo.png\" width=\"38px\" height=\"38px\" (click)=\"drawer.toggle()\">\r\n\r\n                <span (click)=\"drawer.toggle()\">\r\n                    {{config.app.name}}\r\n                </span>\r\n\r\n                <!-- Spacer -->\r\n                <div class=\"spacer\"></div>\r\n\r\n                <!-- Profile -->\r\n                <ng-container *ngIf=\"authenticated == true\">\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"mprofile\">\r\n                        <img src=\"assets/images/user.svg\" width=\"24px\">\r\n                    </button>\r\n                    <mat-menu #mprofile=\"matMenu\">\r\n                        <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + profilePath + ')'}\">\r\n                            <div class=\"name\">\r\n                                {{userName}}\r\n                            </div>\r\n                        </div>\r\n                        <a mat-menu-item routerLink=\"/profile\">Profile</a>\r\n                        <a mat-menu-item routerLink=\"/home\">Privacy Policy</a>\r\n                        <mat-divider></mat-divider>\r\n                        <button mat-menu-item (click)=\"signOut()\">Sign Out</button>\r\n                    </mat-menu>\r\n                </ng-container>\r\n\r\n                <!-- Sign In -->\r\n                <ng-container *ngIf=\"authenticated == false\">\r\n                    <a mat-button routerLink=\"authentication/sign-in\">Sign In</a>\r\n                </ng-container>\r\n            </mat-toolbar>\r\n        </header>\r\n\r\n        <main>\r\n            <!-- Outlet -->\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <footer>\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h2 class=\"mat-h2\">{{config.app.developer.name}}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    </mat-drawer-content>\r\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  authenticated = false;\r\n\r\n  constructor(\r\n    private $authentication: AuthenticationService,\r\n    private $snackBar: MatSnackBar,\r\n    private $router: Router,\r\n    public config: ConfigService,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    this.$authentication.authenticated.subscribe(\r\n      (result: boolean) => {\r\n        this.authenticated = result;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signOut(): void {\r\n    this.$authentication.signOut().subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$snackBar.open(result.message, '', {\r\n          duration: 3000,\r\n        });\r\n\r\n        this.$router.navigate(['/home']);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.$snackBar.open(error.message, '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  get userName(): string {\r\n    return this.$authentication.user?.name || 'Untitled';\r\n  }\r\n\r\n  get profilePath(): string {\r\n    return this.$authentication.profilePath;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from '@app/app-routing.module';\r\nimport { AppComponent } from '@app/app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { NavigationComponent } from '@app/navigation/navigation.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ConfirmComponent } from '@app/confirm/confirm.component';\r\nimport { CSVComponent } from '@app/csv/csv.component';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\n\r\nconst config: SocketIoConfig = { url: 'http://air-vms.com:8000', options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    ConfirmComponent,\r\n    CSVComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatDividerModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    SocketIoModule.forRoot(config)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { ApiService } from '@services/api.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ConfigService } from '@services/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  $authenticated: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $user: UserModel | null = null;\r\n  $rt = 0;\r\n\r\n  constructor(\r\n    private $api: ApiService,\r\n    private $router: Router,\r\n    public config: ConfigService,\r\n  ) {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        this.$user = JSON.parse(localStorage.getItem('user') || '');\r\n\r\n        this.$api.tokenize(token);\r\n\r\n        this.$authenticated.next(true);\r\n\r\n        this.verifyUser().subscribe(\r\n          (result: HttpResponseModel) => {\r\n           \r\n          },\r\n          (error: HttpResponseModel) => {\r\n            this.detox();\r\n            this.$router.navigate(['/home']);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        this.$authenticated.next(false);\r\n\r\n        this.$user = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getOTP(phone: string): Observable<HttpResponseModel> {\r\n    return this.$api.post('/twofa/otp', {\r\n      twofa: {\r\n        phone,\r\n      },\r\n    });\r\n  }\r\n\r\n  verifyOTP(phone: string, otp: string): Observable<HttpResponseModel> {\r\n    return this.$api.post('/twofa/verify', {\r\n      twofa: {\r\n        phone,\r\n        otp,\r\n      },\r\n    });\r\n  }\r\n\r\n  signIn(user: any): Observable<HttpResponseModel> {\r\n    return this.$api.post('/user/sign-in', {\r\n      user,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.$user = result.data.user;\r\n\r\n        localStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n        this.$api.tokenize(result.data.token);\r\n\r\n        this.$authenticated.next(true);\r\n\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  verifyUser(): Observable<HttpResponseModel> {\r\n    return this.$api.post('/user/verify', {\r\n    });\r\n  }\r\n\r\n  updateUser(user: any): Observable<HttpResponseModel> {\r\n    return this.$api.patch('/user', {\r\n      user,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.detox();\r\n\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  signOut(): Observable<HttpResponseModel> {\r\n    return this.$api.post('/user/sign-out', {}).pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.detox();\r\n\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  uploadProfile(profile: File): Observable<HttpResponseModel> {\r\n    const fd = new FormData();\r\n\r\n    fd.append('file', profile);\r\n\r\n    return this.$api.upload(fd, '/profile').pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => {\r\n        this.$rt = this.$rt + 1;\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  detox(): void {\r\n    this.$authenticated.next(false);\r\n\r\n    this.$user = null;\r\n\r\n    localStorage.removeItem('user');\r\n\r\n    this.$api.detokenize();\r\n  }\r\n\r\n  get authenticated(): BehaviorSubject<boolean> {\r\n    return this.$authenticated;\r\n  }\r\n\r\n  get user(): UserModel | null {\r\n    return this.$user;\r\n  }\r\n\r\n  get profilePath(): string {\r\n    if (this.$user) {\r\n      return `${this.config.api.url}/profile/${this.$user.org.id}/${this.$user.phone}/${this.$rt}`;\r\n    }\r\n    return `${this.config.api.url}/profile/${this.$rt}`;\r\n  }\r\n}\r\n","<div class=\"container-navigation\">\r\n    <mat-card class=\"mat-elevation-z\">\r\n        <mat-card-header>\r\n            <div mat-card-avatar class=\"org-logo\" [ngStyle]=\"{'background-image': 'url(' + logoPath + ')'}\">\r\n            </div>\r\n            <mat-card-title>{{org?.name || ''}}</mat-card-title>\r\n            <mat-card-subtitle>{{org?.website || ''}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n    </mat-card>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <ng-container *ngIf=\"authenticated\">\r\n                <mat-nav-list>\r\n                    <a mat-list-item routerLink=\"/dashboard\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/dashboard.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Dashboard\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </mat-nav-list>\r\n                <mat-nav-list *ngIf=\"admin\">\r\n                    <h4 class=\"mat-h4\" matSubheader>Admin</h4>\r\n                    <a mat-list-item routerLink=\"/admin/org\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/org.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Organization\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/agendas\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/agendas.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Agendas\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/nda\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/nda.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                NDA\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/feedbacks\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/feedbacks.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Feedbacks\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/answers\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/answers.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Answers\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/messages\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/messages.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Messages\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/users\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/users.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Users\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <a mat-list-item routerLink=\"/admin/visitors\">\r\n                        <div class=\"row no-gutters align-items-center\">\r\n                            <div class=\"col-auto\">\r\n                                <img src=\"assets/images/navigation/visitors.svg\" width=\"18px\">\r\n                            </div>\r\n                            <div class=\"col nav-label\">\r\n                                Visitors\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </mat-nav-list>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { OrgModel } from '@models/org.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { OrgService } from '@services/org.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor(\r\n    private $authentication: AuthenticationService,\r\n    private $org: OrgService,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get admin(): boolean {\r\n    if (this.$authentication.authenticated.getValue()) {\r\n      const role = this.$authentication.user?.role;\r\n      if (role) {\r\n        if (\r\n          this.config.role.ra == role.id\r\n          ||\r\n          this.config.role.rp == role.id\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.$authentication.authenticated.getValue();\r\n  }\r\n\r\n  get org(): OrgModel | undefined {\r\n    return this.$authentication.user?.org;\r\n  }\r\n\r\n  get logoPath(): string {\r\n    return this.$org.logoPath;\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<h1 class=\"mat-h1\" mat-dialog-title>{{data.title}}</h1>\r\n<div mat-dialog-content>\r\n    <p>\r\n        {{data.body}}\r\n    </p>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>No</button>\r\n    <button mat-button [mat-dialog-close]=\"true\">Yes</button>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { StatusModel } from '@models/status.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n  api: any = {\r\n    url: 'http://air-vms.com:8000/api',\r\n  };\r\n\r\n  app: any = {\r\n    name: 'Air',\r\n    tagline: 'Shaping the workplaces of the future',\r\n\r\n    developer: {\r\n      name: 'Shivam Pawar',\r\n    },\r\n  };\r\n\r\n  role: any = {\r\n    rt: 1,\r\n    rs: 2,\r\n    rh: 3,\r\n    ra: 4,\r\n    rp: 5,\r\n  };\r\n\r\n  statuses: StatusModel[] = [\r\n    {\r\n      id: 1,\r\n      label: 'Waiting',\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Approved',\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'Rejected',\r\n    },\r\n    {\r\n      id: 4,\r\n      label: 'Drop',\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', redirectTo: 'home', pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'home', loadChildren: () => import('@home/home.module').then(module => module.HomeModule),\r\n  },\r\n  {\r\n    path: 'authentication', loadChildren: () => import('@authentication/authentication.module').then(module => module.AuthenticationModule),\r\n  },\r\n  {\r\n    path: 'dashboard', loadChildren: () => import('@dashboard/dashboard.module').then(module => module.DashboardModule),\r\n  },\r\n  {\r\n    path: 'profile', loadChildren: () => import('@profile/profile.module').then(module => module.ProfileModule),\r\n  },\r\n  {\r\n    path: 'admin', loadChildren: () => import('@admin/admin.module').then(module => module.AdminModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from '@app/app.module';\r\nimport { environment } from '@src/environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}