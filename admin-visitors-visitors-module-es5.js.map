{"version":3,"sources":["webpack:///src/app/admin/visitors/all/all.component.ts","webpack:///src/app/admin/visitors/all/all.component.html","webpack:///src/app/admin/visitors/visitors-routing.module.ts","webpack:///src/app/admin/visitors/visits/visits.component.ts","webpack:///src/app/admin/visitors/visits/visits.component.html","webpack:///src/app/admin/visitors/visitors.component.ts","webpack:///src/app/admin/visitors/visitors.component.html","webpack:///src/app/admin/visitors/filter/filter.component.ts","webpack:///src/app/admin/visitors/filter/filter.component.html","webpack:///src/app/services/visitor.service.ts","webpack:///src/app/admin/visitors/visitor/visitor.component.html","webpack:///src/app/admin/visitors/visitor/visitor.component.ts","webpack:///src/app/admin/visitors/visitors.module.ts"],"names":["AllComponent","$visitor","$csv","$snackBar","breakpoints","sort","sse","cache","isMD","vtdc","vtds","filter","getVisitors","subscribe","visitors","data","length","open","duration","error","message","getVisitorsCSV","result","prompt","filename","id","getVisitor","updateFilter","routes","path","component","VisitorsRoutingModule","forChild","VisitsComponent","$visit","config","date","Date","status","hosts","visitor","getValue","getVisitsOfVisitor","visits","console","log","getHostsOfVisit","response","statuses","getVisits","VisitorsComponent","FilterComponent","fe","query","emit","VisitorService","$api","post","pipe","black","patch","get","next","api","url","org","phone","VisitorComponent","$confirm","roles","cdr","afterClosed","deleteVisitor","nullifyVisitor","updateVisitorBlack","profilePath","gidPath","name","VisitorsModule"],"mappings":"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","file":"admin-visitors-visitors-module-es5.js","sourcesContent":["import { AfterContentInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { VisitorModel } from '@models/visitor.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { CSVService } from '@services/csv.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-all',\r\n  templateUrl: './all.component.html',\r\n  styleUrls: ['./all.component.css']\r\n})\r\nexport class AllComponent implements OnInit, AfterContentInit {\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  cache: any = null;\r\n\r\n  // Visitors table\r\n  vtdc: string[];\r\n  vtds: MatTableDataSource<VisitorModel>;\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $csv: CSVService,\r\n    private $snackBar: MatSnackBar,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.vtdc = ['id', 'name', 'phone', 'action'];\r\n    } else {\r\n      this.vtdc = ['id', 'name', 'action'];\r\n    }\r\n\r\n    this.vtds = new MatTableDataSource<VisitorModel>([\r\n    ]);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  updateFilter(filter: any): void {\r\n    this.cache = filter;\r\n\r\n    this.sse = '';\r\n    this.$visitor.getVisitors(filter).subscribe(\r\n      (visitors: VisitorModel[]) => {\r\n        this.vtds.data = visitors;\r\n        this.vtds.sort = this.sort;\r\n\r\n        if (visitors.length === 0) {\r\n          this.$snackBar.open('You do not have anything here', '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.sse = error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  getVisitorsCSV(): void {\r\n    if (this.cache) {\r\n      this.sse = '';\r\n\r\n      this.$visitor.getVisitorsCSV(this.cache).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$csv.prompt(result.data.filename);\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    } else {\r\n      this.$snackBar.open('You must first fetch visitors', '', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  getVisitor(id: number) {\r\n    this.$visitor.getVisitor(id);\r\n  }\r\n}\r\n","<div class=\"row no-gutters\">\r\n    <div class=\"col-12 col-md-8\">\r\n        <app-filter (fe)=\"updateFilter($event)\"></app-filter>\r\n\r\n        <!-- Table -->\r\n        <mat-table [dataSource]=\"vtds\" matSort>\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.id}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.name}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Phone Column -->\r\n            <ng-container matColumnDef=\"phone\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.phone}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">\r\n                    <button mat-icon-button class=\"mat-elevation-z\" (click)=\"getVisitor(visitor.id)\">\r\n                        <img src=\"assets/images/eye.svg\" width=\"18px\">\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"vtdc\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: vtdc\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-4\">\r\n        <app-visitor></app-visitor>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n        <div class=\"d-flex justify-content-center breathe\">\r\n            <button mat-mini-fab color=\"primary\" class=\"mat-elevation-z\" (click)=\"getVisitorsCSV()\">\r\n                <img src=\"assets/images/database.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-sse\">\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { VisitorsComponent } from '@admin/visitors/visitors.component';\r\n\r\nconst routes: Routes = [{ path: '', component: VisitorsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class VisitorsRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { StatusModel } from '@models/status.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { VisitModel } from '@models/visit.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { VisitService } from '@services/visit.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-visits',\r\n  templateUrl: './visits.component.html',\r\n  styleUrls: ['./visits.component.css']\r\n})\r\nexport class VisitsComponent implements OnInit {\r\n  date: Date = new Date();\r\n  status: number = 2;\r\n\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  hosts: any = [];\r\n\r\n  // Visits table\r\n  vtdc: string[];\r\n  vtds: MatTableDataSource<VisitModel>;\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $visit: VisitService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.vtdc = ['id', 'accompanying', 'agenda', 'vehicle', 'hosts'];\r\n    } else {\r\n      this.vtdc = ['id', 'accompanying', 'agenda', 'hosts'];\r\n    }\r\n\r\n    this.vtds = new MatTableDataSource<VisitModel>([\r\n    ]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getVisits(): void {\r\n    let visitor = this.$visitor.$visitor.getValue();\r\n\r\n    if (visitor == null) {\r\n      this.$snackBar.open('Please select visitor first', '', {\r\n        duration: 3000,\r\n      });\r\n    } else\r\n\r\n      this.$visit.getVisitsOfVisitor(visitor.id, this.status, this.date)\r\n        .subscribe(\r\n          (visits: VisitModel[]) => {\r\n            this.vtds.data = visits;\r\n            this.vtds.sort = this.sort;\r\n\r\n            console.log(visits);\r\n\r\n            if (visits.length === 0) {\r\n              this.$snackBar.open('You do not have anything here', '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n  getHostsOfVisit(id: number): void {\r\n    this.hosts = [];\r\n    let visitor = this.$visitor.$visitor.getValue();\r\n\r\n    if (visitor == null) {\r\n      this.$snackBar.open('Please select visitor first', '', {\r\n        duration: 3000,\r\n      });\r\n    } else\r\n\r\n      this.$visit.getHostsOfVisit(id)\r\n        .subscribe(\r\n          (response: HttpResponseModel) => {\r\n            this.hosts = response.data.hosts;\r\n            console.log(this.hosts);\r\n          },\r\n          (error: HttpResponseModel) => {\r\n            this.$snackBar.open(error.message, '', {\r\n              duration: 3000,\r\n            });\r\n          }\r\n        );\r\n  }\r\n\r\n  get statuses(): StatusModel[] {\r\n    return this.config.statuses;\r\n  }\r\n}\r\n","<div class=\"container-fluid container-visits\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-12 col-md-8\">\r\n            <div class=\"row header bg-dotted\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Day -->\r\n                    <mat-form-field hintLabel=\"Day\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Day</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\" ngDefaultControl\r\n                            (dateChange)=\"getVisits()\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Visit Status -->\r\n                    <mat-form-field hintLabel=\"Visit Status\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Visit Status</mat-label>\r\n                        <mat-select [(ngModel)]=\"status\" (selectionChange)=\"getVisits()\">\r\n                            <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\r\n                                {{status.label}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"vtds\" matSort>\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Agenda Column -->\r\n                        <ng-container matColumnDef=\"agenda\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Agenda</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.agenda.label}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Accompanying Column -->\r\n                        <ng-container matColumnDef=\"accompanying\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Accompanying</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.accompanying}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Vehicle Column -->\r\n                        <ng-container matColumnDef=\"vehicle\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.vehicle}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Hosts Column -->\r\n                        <ng-container matColumnDef=\"hosts\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Hosts</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" [matMenuTriggerFor]=\"mhosts\" (click)=\"getHostsOfVisit(visit.id)\">\r\n                                    <img src=\"assets/images/user.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                \r\n                            <mat-menu #mhosts=\"matMenu\">\r\n                                \r\n                                <button mat-menu-item  *ngFor=\"let host of hosts\">\r\n                                    {{host.user.name}}   \r\n                                </button>\r\n                            </mat-menu>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"vtdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: vtdc\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-md-4\">\r\n            <app-visitor></app-visitor>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-sse\">\r\n        <div class=\"sse-container\">\r\n            <p class=\"sse\" *ngIf=\"sse\">\r\n                {{sse}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visitors',\r\n  templateUrl: './visitors.component.html',\r\n  styleUrls: ['./visitors.component.css']\r\n})\r\nexport class VisitorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid container-cover container-visitors\">\r\n    <!-- Visitors -->\r\n    <mat-card >\r\n        <mat-card-header>\r\n            <mat-card-title>Visitors</mat-card-title>\r\n            <mat-card-subtitle>With great power comes great responsibility</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-12 col-md\">\r\n                    <mat-tab-group>\r\n                        <mat-tab label=\"All\">\r\n                            <app-all></app-all>\r\n                        </mat-tab>\r\n                        \r\n                        <mat-tab label=\"Visits\">\r\n                            <app-visits></app-visits>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-footer>\r\n            She said what you know about love?\r\n        </mat-card-footer>\r\n    </mat-card>\r\n</div>","import { AfterContentInit, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ConfigService } from '@services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.css']\r\n})\r\nexport class FilterComponent implements OnInit, AfterContentInit {\r\n  @Output() fe = new EventEmitter<any>();\r\n\r\n  filter: any = {\r\n    query: '',\r\n  };\r\n\r\n  constructor(\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  emit(): void {\r\n    this.fe.emit(this.filter);\r\n  }\r\n}\r\n","<div class=\"container-fluid container-filter bg-dotted\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col\">\r\n            <!-- Query -->\r\n            <mat-form-field hintLabel=\"Find specifically\" appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Search</mat-label>\r\n                <input type=\"text\" #query matInput maxlength=\"30\" placeholder=\"Bill Gates\" [(ngModel)]=\"filter.query\">\r\n                <mat-hint align=\"end\">{{query.value.length || 0}} / 30</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-auto\">\r\n            <div class=\"container-fluid\">\r\n                <button mat-mini-fab color=\"secondary\" class=\"mat-elevation-z2\" (click)=\"emit()\">\r\n                    <img src=\"assets/images/arrow-right.svg\" width=\"18px\">\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from '@services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfigService } from './config.service';\r\nimport { VisitorModel } from '@models/visitor.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VisitorService {\r\n  getVisitors(filter: any): Observable<VisitorModel[]> {\r\n    return this.$api.post('/visitor/all/filtered', {\r\n      filter,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): VisitorModel[] => result.data.visitors));\r\n  }\r\n\r\n  getVisitorsCSV(filter: any): Observable<HttpResponseModel> {\r\n    return this.$api.post('/csv/visitors/all/filtered', {\r\n      filter,\r\n    });\r\n  }\r\n\r\n  deleteVisitor(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/visitor/${id}`);\r\n  }\r\n\r\n  updateVisitorBlack(id: number, black: boolean): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/visitor/${id}/black/${black}`, {});\r\n  }\r\n\r\n  $visitor: BehaviorSubject<VisitorModel | null> = new BehaviorSubject<VisitorModel | null>(null);\r\n\r\n  constructor(\r\n    private $api: ApiService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n  ) {\r\n  }\r\n\r\n  getVisitor(id: number): void {\r\n    this.$api.get(`/visitor/${id}`).subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$visitor.next(result.data.visitor);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.$snackBar.open(error.message, '', {\r\n          duration: 3000,\r\n        });\r\n      });\r\n  }\r\n\r\n  nullifyVisitor(): void {\r\n    this.$visitor.next(null);\r\n  }\r\n\r\n  get visitor(): BehaviorSubject<VisitorModel | null> {\r\n    return this.$visitor;\r\n  }\r\n\r\n  get profilePath(): string {\r\n    const visitor = this.$visitor.getValue();\r\n    if (visitor) {\r\n      return `${this.config.api.url}/profile/${visitor.org.id}/${visitor.phone}`;\r\n    }\r\n    return `${this.config.api.url}/profile/loni`;\r\n  }\r\n\r\n  get gidPath(): string {\r\n    const visitor = this.$visitor.getValue();\r\n    if (visitor) {\r\n      return `${this.config.api.url}/gid/${visitor.org.id}/${visitor.phone}`;\r\n    }\r\n    return ``;\r\n  }\r\n}\r\n","<div class=\"container container-visitor\" *ngIf=\"visitor\">\r\n    <mat-card-header>\r\n        <div mat-card-avatar *ngIf=\"visitor.black\" [ngStyle]=\"{'background-color': '#242424'}\"></div>\r\n        <mat-card-title>\r\n            {{visitorName}}\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n            Visitor\r\n    </mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    \r\n    <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + profilePath + ')'}\">\r\n        <div class=\"visitorname\">\r\n            {{visitorName}}\r\n        </div>\r\n        <div class=\"mvisitor\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"mvisitor\">\r\n                <img src=\"assets/images/edit-light.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n        <mat-menu #mvisitor=\"matMenu\">\r\n            <button mat-menu-item>\r\n                <span *ngIf=\"visitor.black\" (click)=\"updateVisitorBlack(false)\">\r\n                    Unblack\r\n                </span>\r\n                <span *ngIf=\"visitor.black == false\" (click)=\"updateVisitorBlack(true)\">\r\n                    Black\r\n                </span>\r\n            </button>\r\n            <button mat-menu-item (click)=\"deleteVisitor()\">Delete</button>\r\n        </mat-menu>\r\n    </div>\r\n    \r\n    <section>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        Name\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.name}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Phone\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.phone}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Email\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.email}}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </section>\r\n\r\n    <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + gidPath + ')'}\">\r\n        <div class=\"visitorname\">\r\n            Government ID\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { RoleModel } from '@models/role.model';\r\nimport { VisitorModel } from '@models/visitor.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { ConfirmService } from '@services/confirm.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-visitor',\r\n  templateUrl: './visitor.component.html',\r\n  styleUrls: ['./visitor.component.css']\r\n})\r\nexport class VisitorComponent implements OnInit, AfterContentInit {\r\n  visitor: VisitorModel | null = null;\r\n\r\n  roles: RoleModel[] = [];\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $snackBar: MatSnackBar,\r\n    private $confirm: ConfirmService,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getVisitor();\r\n  }\r\n\r\n  getVisitor(): void {\r\n    this.$visitor.$visitor.subscribe((visitor: VisitorModel | null) => {\r\n      this.visitor = visitor;\r\n    });\r\n  }\r\n\r\n  deleteVisitor(): void {\r\n    const cdr = this.$confirm.prompt(\r\n      'Are you sure?',\r\n      `This action is irreversible. Visitors are meant to be deleted on when they \r\n      are illegitimate or accidently created. This will also result in deleting \r\n      of information associated with the visitor`,\r\n    );\r\n\r\n    cdr.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        if (this.visitor) {\r\n          this.$visitor.deleteVisitor(this.visitor.id).subscribe(\r\n            () => {\r\n              this.$visitor.nullifyVisitor();\r\n              this.$snackBar.open(`Visitor and associated information deleted`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.$snackBar.open(error.message, '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      }\r\n      else {\r\n        this.$snackBar.open('Operation cancelled by the user', '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateVisitorBlack(black: boolean): void {\r\n    if (this.visitor) {\r\n      this.$visitor.updateVisitorBlack(this.visitor.id, black).subscribe(\r\n        () => {\r\n          if (this.visitor) {\r\n            this.$visitor.getVisitor(this.visitor.id);\r\n          }\r\n          this.$snackBar.open(`Visitor's black updated`, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get profilePath(): string {\r\n    return this.$visitor.profilePath;\r\n  }\r\n\r\n  get gidPath(): string {\r\n    return this.$visitor.gidPath;\r\n  }\r\n\r\n  get visitorName(): string {\r\n    const visitor = this.$visitor.$visitor?.getValue();\r\n    return visitor ? visitor.name : 'Untitled';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VisitorsRoutingModule } from '@admin/visitors/visitors-routing.module';\r\nimport { VisitorsComponent } from '@admin/visitors/visitors.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AllComponent } from '@admin/visitors/all/all.component';\r\nimport { FilterComponent } from '@admin/visitors/filter/filter.component';\r\nimport { VisitorComponent } from '@admin/visitors/visitor/visitor.component';\r\nimport { VisitsComponent } from './visits/visits.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [VisitorsComponent, AllComponent, FilterComponent, VisitorComponent, VisitsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    VisitorsRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatDividerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n  ]\r\n})\r\nexport class VisitorsModule { }\r\n"]}