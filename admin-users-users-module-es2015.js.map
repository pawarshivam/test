{"version":3,"sources":["./src/app/admin/users/users.module.ts","./src/app/admin/users/users-routing.module.ts","./src/app/services/role.service.ts","./src/app/admin/users/visits/visits.component.ts","./src/app/admin/users/visits/visits.component.html","./src/app/admin/users/all/all.component.ts","./src/app/admin/users/all/all.component.html","./src/app/admin/users/bulk/bulk.component.html","./src/app/admin/users/bulk/bulk.component.ts","./src/app/admin/users/filter/filter.component.ts","./src/app/admin/users/filter/filter.component.html","./src/app/admin/users/user/user.component.html","./src/app/admin/users/user/user.component.ts","./src/app/admin/users/users.component.ts","./src/app/admin/users/users.component.html","./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"admin-users-users-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from '@admin/users/users-routing.module';\r\nimport { UsersComponent } from '@admin/users/users.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { BulkComponent } from '@admin/users/bulk/bulk.component';\r\nimport { AllComponent } from '@admin/users/all/all.component';\r\nimport { FilterComponent } from '@admin/users/filter/filter.component';\r\nimport { UserComponent } from '@admin/users/user/user.component';\r\nimport { VisitsComponent } from './visits/visits.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UsersComponent, BulkComponent, AllComponent, FilterComponent, UserComponent, VisitsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatDividerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsersComponent } from '@admin/users/users.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UsersComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { RoleModel } from '@models/role.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService } from '@services/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  $init = false;\r\n  $dirty: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  $roles: BehaviorSubject<RoleModel[]> = new BehaviorSubject<RoleModel[]>([]);\r\n\r\n  constructor(private $api: ApiService) {\r\n    this.$dirty.subscribe(\r\n      (dirty: boolean) => {\r\n        if (dirty) {\r\n          this.$api.get('/role/all').subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.$dirty.next(false);\r\n\r\n              this.$roles.next(\r\n                result.data.roles\r\n              );\r\n            },\r\n            (error: HttpResponseModel) => {\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getRoles(): Observable<RoleModel[]> {\r\n    if (this.$init === false  || (this.$roles.getValue().length === 0 && this.$dirty.getValue() === false)) {\r\n      this.$init = true;\r\n\r\n      this.$dirty.next(true);\r\n    }\r\n\r\n    return this.$roles;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { StatusModel } from '@models/status.model';\r\nimport { VisitModel } from '@models/visit.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { UserService } from '@services/user.service';\r\nimport { VisitService } from '@services/visit.service';\r\n\r\n@Component({\r\n  selector: 'app-visits',\r\n  templateUrl: './visits.component.html',\r\n  styleUrls: ['./visits.component.css']\r\n})\r\nexport class VisitsComponent implements OnInit {\r\n  date: Date = new Date();\r\n  status: number = 2;\r\n\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  // Visits table\r\n  vtdc: string[];\r\n  vtds: MatTableDataSource<VisitModel>;\r\n\r\n  constructor(\r\n    private $user: UserService,\r\n    private $visit: VisitService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.vtdc = ['id', 'visitor', 'agenda', 'vehicle', 'action'];\r\n    } else {\r\n      this.vtdc = ['id', 'visitor', 'agenda', 'action'];\r\n    }\r\n\r\n    this.vtds = new MatTableDataSource<VisitModel>([\r\n    ]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  getVisits(): void {\r\n    let user = this.$user.$user.getValue();\r\n\r\n    if (user == null) {\r\n      this.$snackBar.open('Please select user first', '', {\r\n        duration: 3000,\r\n      });\r\n    } else\r\n\r\n      this.$visit.getVisitsOfUser(user.id, this.status, this.date)\r\n        .subscribe(\r\n          (visits: VisitModel[]) => {\r\n            this.vtds.data = visits;\r\n            this.vtds.sort = this.sort;\r\n\r\n            if (visits.length === 0) {\r\n              this.$snackBar.open('You do not have anything here', '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n  get statuses(): StatusModel[] {\r\n    return this.config.statuses;\r\n  }\r\n}\r\n","<div class=\"container-fluid container-visits\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-12 col-md-8\">\r\n            <div class=\"row header bg-dotted\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Day -->\r\n                    <mat-form-field hintLabel=\"Day\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Day</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\" ngDefaultControl\r\n                            (dateChange)=\"getVisits()\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Visit Status -->\r\n                    <mat-form-field hintLabel=\"Visit Status\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Visit Status</mat-label>\r\n                        <mat-select [(ngModel)]=\"status\" (selectionChange)=\"getVisits()\">\r\n                            <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\r\n                                {{status.label}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"vtds\" matSort>\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Agenda Column -->\r\n                        <ng-container matColumnDef=\"agenda\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Agenda</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.agenda.label}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Visitor Column -->\r\n                        <ng-container matColumnDef=\"visitor\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Visitor</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.visitor.name}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Vehicle Column -->\r\n                        <ng-container matColumnDef=\"vehicle\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.vehicle}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Action Column -->\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\">\r\n                                    <img src=\"assets/images/eye.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"vtdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: vtdc\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-md-4\">\r\n            <app-user></app-user>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-sse\">\r\n        <div class=\"sse-container\">\r\n            <p class=\"sse\" *ngIf=\"sse\">\r\n                {{sse}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterContentInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { CSVService } from '@services/csv.service';\r\nimport { UserService } from '@services/user.service';\r\n// import { UXVService } from '@services/uxv.service';\r\n\r\n@Component({\r\n  selector: 'app-all',\r\n  templateUrl: './all.component.html',\r\n  styleUrls: ['./all.component.css']\r\n})\r\nexport class AllComponent implements OnInit, AfterContentInit {\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  cache: any = null;\r\n\r\n  // Users table\r\n  utdc: string[];\r\n  utds: MatTableDataSource<UserModel>;\r\n\r\n  constructor(\r\n    private $user: UserService,\r\n    private $csv: CSVService,\r\n    private $snackBar: MatSnackBar,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.utdc = ['id', 'name', 'phone', 'action'];\r\n    } else {\r\n      this.utdc = ['id', 'name', 'action'];\r\n    }\r\n\r\n    this.utds = new MatTableDataSource<UserModel>([\r\n    ]);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  updateFilter(filter: any): void {\r\n    this.cache = filter;\r\n\r\n    this.sse = '';\r\n    this.$user.getUsers(filter).subscribe(\r\n      (users: UserModel[]) => {\r\n        this.utds.data = users;\r\n        this.utds.sort = this.sort;\r\n\r\n        if (users.length === 0) {\r\n          this.$snackBar.open('You do not have anything here', '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.sse = error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  getUsersCSV(): void {\r\n    if (this.cache) {\r\n      this.sse = '';\r\n\r\n      this.$user.getUsersCSV(this.cache).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$csv.prompt(result.data.filename);\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    } else {\r\n      this.$snackBar.open('You must first fetch users', '', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  getUser(id: number) {\r\n    this.$user.getUser(id);\r\n  }\r\n}\r\n","<div class=\"row no-gutters\">\r\n    <div class=\"col-12 col-md-8\">\r\n        <app-filter (fe)=\"updateFilter($event)\"></app-filter>\r\n\r\n        <!-- Table -->\r\n        <mat-table [dataSource]=\"utds\" matSort>\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let user\">{{user.id}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let user\">{{user.name}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Phone Column -->\r\n            <ng-container matColumnDef=\"phone\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let user\">{{user.phone}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let user\">\r\n                    <button mat-icon-button class=\"mat-elevation-z\" (click)=\"getUser(user.id)\">\r\n                        <img src=\"assets/images/eye.svg\" width=\"18px\">\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"utdc\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: utdc\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-4\">\r\n        <app-user></app-user>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n        <div class=\"d-flex justify-content-center breathe\">\r\n            <button mat-mini-fab color=\"primary\" class=\"mat-elevation-z\" (click)=\"getUsersCSV()\">\r\n                <img src=\"assets/images/database.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-sse\">\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>","<div class=\"row no-gutters\">\r\n    <div class=\"col-12 bg-dotted\">\r\n        <mat-card class=\"card-upload\">\r\n            <mat-card-header>\r\n                <mat-card-title>Bulk Upload</mat-card-title>\r\n                <mat-card-subtitle>Upload a CSV and add all users at once</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <img src=\"assets/images/bulk.svg\" class=\"w-100\">\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <!-- File -->\r\n                        <input type=\"file\" class=\"d-none\" #csv accept=\"text/csv\" (change)=\"storeCSV($event)\">\r\n\r\n                        <button mat-flat-button color=\"secondary\" class=\"w-100\" (click)=\"pickCSV($event, csv)\">\r\n                            Upload\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <button mat-flat-button color=\"primary\" class=\"w-100\" [disabled]=\"file == null\" (click)=\"uploadCSV($event)\">\r\n                            Post\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"d-flex justify-content-center breathe\">\r\n            <a mat-mini-fab color=\"primary\" class=\"mat-elevation-z\" [href]=\"config.api.url + '/user/template'\">\r\n                <img src=\"assets/images/download-light.svg\" width=\"18px\">\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-sse\">\r\n    <p class=\"sse\" *ngIf=\"sse\">\r\n        {{sse}}\r\n    </p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { UserService } from '@services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-bulk',\r\n  templateUrl: './bulk.component.html',\r\n  styleUrls: ['./bulk.component.css']\r\n})\r\nexport class BulkComponent implements OnInit {\r\n  sse = '';\r\n\r\n  file: File | null = null;\r\n\r\n  constructor(\r\n    private $user: UserService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  pickCSV(event: MouseEvent, csv: any): void {\r\n    event.preventDefault();\r\n\r\n    csv.click();\r\n  }\r\n\r\n  storeCSV(event: any): void {\r\n    if (event.target.files.length > 0) {\r\n      [this.file] = event.target.files;\r\n    }\r\n  }\r\n\r\n  uploadCSV(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.file) {\r\n      this.$user.uploadCSV(this.file).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$snackBar.open(result.message, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { DepartmentModel } from '@models/department.model';\r\nimport { RoleModel } from '@models/role.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { DepartmentService } from '@services/department.service';\r\nimport { RoleService } from '@services/role.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.css']\r\n})\r\nexport class FilterComponent implements OnInit, AfterContentInit {\r\n  @Output() fe = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Search | Select\r\n   */\r\n  mode = false;\r\n\r\n  roles: RoleModel[] = [];\r\n  departments: DepartmentModel[] = [];\r\n\r\n  filter: any = {\r\n    query: '',\r\n    role: {\r\n      ids: []\r\n    },\r\n    department: {\r\n      ids: []\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private $department: DepartmentService,\r\n    private $role: RoleService,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getRoles();\r\n    this.getDepartments();\r\n  }\r\n\r\n  getRoles(): void {\r\n    this.$role.getRoles().subscribe(\r\n      (roles: RoleModel[]) => {\r\n        this.roles = roles;\r\n        this.filter.role.ids = this.roles.map((role) => role.id);\r\n      }\r\n    );\r\n  }\r\n\r\n  getDepartments(): void {\r\n    this.$department.getDepartments()\r\n      .subscribe(\r\n        (departments: DepartmentModel[]) => {\r\n          this.departments = departments;\r\n          this.filter.department.ids = this.departments.map((department) => department.id);\r\n        },\r\n      );\r\n  }\r\n\r\n  toggle(): void {\r\n    // Clear query\r\n    this.filter.query = '';\r\n    this.mode = !this.mode;\r\n  }\r\n\r\n  emit(): void {\r\n    this.fe.emit(this.filter);\r\n  }\r\n}\r\n","<div class=\"container-fluid container-filter bg-dotted\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col\">\r\n            <div class=\"row\" *ngIf=\"mode == false\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Department -->\r\n                    <mat-form-field hintLabel=\"Allowed departments\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Department</mat-label>\r\n                        <mat-select multiple [(ngModel)]=\"filter.department.ids\">\r\n                            <mat-option *ngFor=\"let department of departments\" [value]=\"department.id\">\r\n                                {{department.name}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Role -->\r\n                    <mat-form-field hintLabel=\"Allowed privelege levels\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Role</mat-label>\r\n                        <mat-select multiple [(ngModel)]=\"filter.role.ids\">\r\n                            <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\r\n                                {{role.label}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\" *ngIf=\"mode == true\">\r\n                <div class=\"col-12\">\r\n                    <!-- Query -->\r\n                    <mat-form-field hintLabel=\"Find specifically\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input type=\"text\" #query matInput maxlength=\"30\" placeholder=\"Bill Gates\"\r\n                            [(ngModel)]=\"filter.query\">\r\n                        <mat-hint align=\"end\">{{query.value.length || 0}} / 30</mat-hint>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-auto\">\r\n            <div class=\"container-fluid\">\r\n                <button mat-mini-fab color=\"secondary\" class=\"mat-elevation-z2\" (click)=\"toggle()\">\r\n                    <img src=\"assets/images/refresh-cw.svg\" *ngIf=\"mode == true\" width=\"18px\">\r\n                    <img src=\"assets/images/search.svg\" *ngIf=\"mode == false\" width=\"18px\">\r\n                </button>\r\n            </div>\r\n            <div class=\"container-fluid\">\r\n                <button mat-mini-fab color=\"secondary\" class=\"mat-elevation-z2\" (click)=\"emit()\">\r\n                    <img src=\"assets/images/arrow-right.svg\" width=\"18px\">\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"container container-user\" *ngIf=\"user\">\r\n    <mat-card-header>\r\n        <div mat-card-avatar *ngIf=\"user.black\" [ngStyle]=\"{'background-color': '#242424'}\"></div>\r\n        <mat-card-title>\r\n            {{userName}}\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n            {{roleLabel}}\r\n        </mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + profilePath + ')'}\">\r\n        <div class=\"username\">\r\n            {{userName}}\r\n        </div>\r\n        <div class=\"muser\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"muser\">\r\n                <img src=\"assets/images/edit-light.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n        <mat-menu #muser=\"matMenu\">\r\n            <button mat-menu-item [matMenuTriggerFor]=\"mroles\">Role</button>\r\n            <button mat-menu-item>\r\n                <span *ngIf=\"user.black\" (click)=\"updateUserBlack(false)\">\r\n                    Unblack\r\n                </span>\r\n                <span *ngIf=\"user.black == false\" (click)=\"updateUserBlack(true)\">\r\n                    Black\r\n                </span>\r\n            </button>\r\n            <button mat-menu-item (click)=\"deleteUser()\">Delete</button>\r\n        </mat-menu>\r\n        <mat-menu #mroles=\"matMenu\">\r\n            <button mat-menu-item *ngFor=\"let role of roles\" (click)=\"updateUserRole(role.id)\">{{role.label}}</button>\r\n        </mat-menu>\r\n    </div>\r\n\r\n    <section>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        Name\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.name}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Department\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.department.name}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Role\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.role.label}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Phone\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.phone}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Email\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.email}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Designation\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{user.designation}}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </section>\r\n</div>","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { RoleModel } from '@models/role.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { ConfirmService } from '@services/confirm.service';\r\nimport { RoleService } from '@services/role.service';\r\nimport { UserService } from '@services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit, AfterContentInit {\r\n  user: UserModel | null = null;\r\n\r\n  roles: RoleModel[] = [];\r\n\r\n  constructor(\r\n    private $user: UserService,\r\n    private $role: RoleService,\r\n    private $snackBar: MatSnackBar,\r\n    private $confirm: ConfirmService,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getUser();\r\n    this.getRoles();\r\n  }\r\n\r\n  getUser(): void {\r\n    this.$user.$user.subscribe((user: UserModel | null) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  getRoles(): void {\r\n    this.$role.getRoles().subscribe(\r\n      (roles: RoleModel[]) => {\r\n        this.roles = roles;\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteUser(): void {\r\n    const cdr = this.$confirm.prompt(\r\n      'Are you sure?',\r\n      `This action is irreversible. Users are meant to be deleted on when they \r\n      are illegitimate or accidently created. This will also result in deleting \r\n      of information associated with the user`,\r\n    );\r\n\r\n    cdr.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        if (this.user) {\r\n          this.$user.deleteUser(this.user.id).subscribe(\r\n            () => {\r\n              this.$user.nullifyUser();\r\n              this.$snackBar.open(`User and associated information deleted`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.$snackBar.open(error.message, '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      }\r\n      else {\r\n        this.$snackBar.open('Operation cancelled by the user', '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserRole(id: number): void {\r\n    if (this.user) {\r\n      this.$user.updateUserRole(this.user.id, id).subscribe(\r\n        () => {\r\n          if (this.user) {\r\n            this.$user.getUser(this.user.id);\r\n          }\r\n          this.$snackBar.open(`User role updated`, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  updateUserBlack(black: boolean): void {\r\n    if (this.user) {\r\n      this.$user.updateUserBlack(this.user.id, black).subscribe(\r\n        () => {\r\n          if (this.user) {\r\n            this.$user.getUser(this.user.id);\r\n          }\r\n          this.$snackBar.open(`User's black updated`, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get profilePath(): string {\r\n    return this.$user.profilePath;\r\n  }\r\n\r\n  get userName(): string {\r\n    const user = this.$user.$user?.getValue();\r\n    return user ? user.name : 'Untitled';\r\n  }\r\n\r\n  get roleLabel(): string {\r\n    const role = this.$user.role;\r\n    if (role) { return role.label; } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid container-cover container-users\">\r\n    <!-- Users -->\r\n    <mat-card >\r\n        <mat-card-header>\r\n            <mat-card-title>Users</mat-card-title>\r\n            <mat-card-subtitle>With great power comes great responsibility</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-12 col-md\">\r\n                    <mat-tab-group>\r\n                        <mat-tab label=\"All\">\r\n                            <app-all></app-all>\r\n                        </mat-tab>\r\n                        \r\n                        <mat-tab label=\"Visits\">\r\n                            <app-visits></app-visits>\r\n                        </mat-tab>\r\n\r\n                        <mat-tab label=\"Bulk\">\r\n                            <app-bulk></app-bulk>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-footer>\r\n            She said what you know about love?\r\n        </mat-card-footer>\r\n    </mat-card>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from '@services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfigService } from './config.service';\r\nimport { RoleModel } from '@models/role.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  getUsers(filter: any): Observable<UserModel[]> {\r\n    return this.$api.post('/user/all/filtered', {\r\n      filter,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): UserModel[] => result.data.users));\r\n  }\r\n\r\n  getUsersCSV(filter: any): Observable<HttpResponseModel> {\r\n    return this.$api.post('/csv/users/all/filtered', {\r\n      filter,\r\n    });\r\n  }\r\n\r\n  deleteUser(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/user/${id}`);\r\n  }\r\n\r\n  updateUserRole(id: number, rid: number): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/user/${id}/role/${rid}`, {});\r\n  }\r\n\r\n  updateUserBlack(id: number, black: boolean): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/user/${id}/black/${black}`, {});\r\n  }\r\n\r\n  uploadCSV(csv: File): Observable<HttpResponseModel> {\r\n    const fd = new FormData();\r\n\r\n    fd.append('file', csv);\r\n\r\n    return this.$api.upload(fd, '/user/bulk').pipe(\r\n      map((result: HttpResponseModel): HttpResponseModel => result));\r\n  }\r\n\r\n  $user: BehaviorSubject<UserModel | null> = new BehaviorSubject<UserModel | null>(null);\r\n\r\n  constructor(\r\n    private $api: ApiService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n  ) {\r\n  }\r\n\r\n  getUser(id: number): void {\r\n    this.$api.get(`/user/${id}`).subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$user.next(result.data.user);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.$snackBar.open(error.message, '', {\r\n          duration: 3000,\r\n        });\r\n      });\r\n  }\r\n\r\n  nullifyUser(): void {\r\n    this.$user.next(null);\r\n  }\r\n\r\n  get user(): BehaviorSubject<UserModel | null> {\r\n    return this.$user;\r\n  }\r\n\r\n  get profilePath(): string {\r\n    const user = this.$user.getValue();\r\n    if (user) {\r\n      return `${this.config.api.url}/profile/${user.org.id}/${user.phone}`;\r\n    }\r\n    return `${this.config.api.url}/profile/loni`;\r\n  }\r\n\r\n  get role(): RoleModel | null {\r\n    const user = this.$user.getValue();\r\n    if (user) { return user.role; }\r\n    return null;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}