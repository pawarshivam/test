{"version":3,"sources":["webpack:///src/app/admin/org/department-play/department-play.component.ts","webpack:///src/app/admin/org/department-play/department-play.component.html","webpack:///src/app/admin/org/org.component.ts","webpack:///src/app/admin/org/org.component.html","webpack:///src/app/admin/org/org-routing.module.ts","webpack:///src/app/admin/org/org.module.ts"],"names":["DepartmentPlayComponent","data","$authentication","$department","$snackBar","$bottomSheetRef","config","sse","action","depfg","name","required","pattern","delfg","department","patchValue","role","user","rp","id","disable","event","preventDefault","valid","addDepartment","value","subscribe","enable","open","duration","dismiss","error","message","updateDepartment","deleteDepartment","play","OrgComponent","$org","$bottomSheet","breakpoints","dtdc","dtds","getDepartments","departments","wallpaper","click","logo","target","files","length","file","uploadLogo","result","uploadWallpaper","org","wallpaperPath","logoPath","pickLogo","pickWallpaper","routes","path","component","OrgRoutingModule","forChild","OrgModule"],"mappings":"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","file":"admin-org-org-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DepartmentModel } from '@models/department.model';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { DepartmentService } from '@services/department.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-department-play',\r\n  templateUrl: './department-play.component.html',\r\n  styleUrls: ['./department-play.component.css']\r\n})\r\nexport class DepartmentPlayComponent implements OnInit {\r\n  sse = '';\r\n  action = '';\r\n\r\n  depfg: FormGroup = new FormGroup({\r\n    name: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^.{1,75}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  delfg: FormGroup = new FormGroup({\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $department: DepartmentService,\r\n    private $snackBar: MatSnackBar,\r\n    private $bottomSheetRef: MatBottomSheetRef<DepartmentPlayComponent>,\r\n    public config: ConfigService,\r\n  ) {\r\n    if (data.department == null) {\r\n      this.action = 'Add';\r\n\r\n      this.delfg = new FormGroup({\r\n      });\r\n    } else {\r\n      this.action = 'Update';\r\n\r\n      this.delfg = new FormGroup({\r\n        name: new FormControl(\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(data.department.name),\r\n          ],\r\n        ),\r\n      });\r\n\r\n      this.depfg.patchValue({\r\n        ...this.data.department,\r\n      });\r\n    }\r\n\r\n    // ACL\r\n    const role = this.$authentication.user?.role;\r\n\r\n    if (role) {\r\n      if (\r\n        (this.config.role.rp == role.id) == false\r\n      ) {\r\n        this.depfg.disable();\r\n        this.delfg.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  play(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.depfg.valid) {\r\n      this.sse = '';\r\n      this.depfg.disable();\r\n      switch (this.action) {\r\n        case 'Add':\r\n          this.$department.addDepartment(this.depfg.value).subscribe(\r\n            () => {\r\n              this.depfg.enable();\r\n              this.$snackBar.open(`Department added`, '', {\r\n                duration: 3000,\r\n              });\r\n              this.$bottomSheetRef.dismiss();\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.depfg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n        case 'Update':\r\n          this.$department.updateDepartment(this.data.department.id, this.depfg.value).subscribe(\r\n            () => {\r\n              this.depfg.enable();\r\n              this.$snackBar.open(`Department updated`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.depfg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  delete(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.delfg.valid) {\r\n      this.sse = '';\r\n      this.delfg.disable();\r\n      this.$department.deleteDepartment(this.data.department.id).subscribe(\r\n        () => {\r\n          this.delfg.enable();\r\n          this.$snackBar.open(`Department and associated information deleted`, '', {\r\n            duration: 3000,\r\n          });\r\n          this.$bottomSheetRef.dismiss();\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.delfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-department\">\r\n    <form [formGroup]=\"depfg\" (ngSubmit)=\"play($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{action}} Department</mat-card-title>\r\n            <mat-card-subtitle>Get low when the whistle go</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <!-- Name -->\r\n                    <mat-form-field hintLabel=\"What it is called\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"75\" placeholder=\"Main\" #name formControlName=\"name\">\r\n                        <mat-hint align=\"end\">{{name.value.length || 0}} / 75</mat-hint>\r\n                        <mat-error>Allowed a-Z, 0-9</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\"\r\n                [disabled]=\"depfg.invalid || depfg.disabled\">{{action}}</button>\r\n        </mat-card-actions>\r\n    </form>\r\n\r\n    <ng-container *ngIf=\"action == 'Update'\">\r\n        <form [formGroup]=\"delfg\" (ngSubmit)=\"delete($event)\">\r\n            <mat-card-header>\r\n                <mat-card-title>Delete Department</mat-card-title>\r\n                <mat-card-subtitle>This action is irreversible</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <!-- Name -->\r\n                        <mat-form-field [hintLabel]=\"data.department.name\" appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Name</mat-label>\r\n                            <input type=\"text\" matInput maxlength=\"75\" placeholder=\"Main\" #name formControlName=\"name\">\r\n                            <mat-hint align=\"end\">{{name.value.length || 0}} / 75</mat-hint>\r\n                            <mat-error>Provided and subject's name do not match</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <mat-error>\r\n                            Deleting a department will result into deleting of all the information associated with\r\n                            the department. This action cannot be undone. Provide the department's name to confirm your\r\n                            intention\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"sse-container\">\r\n                            <p class=\"sse\" *ngIf=\"sse\">\r\n                                {{sse}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions>\r\n                <button mat-flat-button color=\"warn\" class=\"w-100\" type=\"submit\" [disabled]=\"delfg.invalid || delfg.disabled\">\r\n                    Delete\r\n                </button>\r\n            </mat-card-actions>\r\n        </form>\r\n    </ng-container>\r\n</div>","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { DepartmentModel } from '@models/department.model';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DepartmentService } from '@services/department.service';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { DepartmentPlayComponent } from '@admin/org/department-play/department-play.component';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { OrgModel } from '@models/org.model';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OrgService } from '@services/org.service';\r\n\r\n@Component({\r\n  selector: 'app-org',\r\n  templateUrl: './org.component.html',\r\n  styleUrls: ['./org.component.css']\r\n})\r\nexport class OrgComponent implements OnInit, AfterContentInit {\r\n  // Departments table\r\n  dtdc: string[] = ['id', 'name', 'action'];\r\n  dtds: MatTableDataSource<DepartmentModel>\r\n    =\r\n    new MatTableDataSource<DepartmentModel>([]);\r\n\r\n  constructor(\r\n    private $authentication: AuthenticationService,\r\n    private $org: OrgService,\r\n    private $department: DepartmentService,\r\n    private $bottomSheet: MatBottomSheet,\r\n    private $snackBar: MatSnackBar,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getDepartments();\r\n  }\r\n\r\n  getDepartments(): void {\r\n    this.$department.getDepartments().subscribe(\r\n      (departments: DepartmentModel[]) => {\r\n        this.dtds.data = departments;\r\n      },\r\n    );\r\n  }\r\n\r\n  departmentPlay(department: DepartmentModel | null): void {\r\n    this.$bottomSheet.open(DepartmentPlayComponent, {\r\n      data: {\r\n        department,\r\n      }\r\n    });\r\n  }\r\n\r\n  pickWallpaper(event: MouseEvent, wallpaper: any): void {\r\n    event.preventDefault();\r\n\r\n    wallpaper.click();\r\n  }\r\n\r\n  pickLogo(event: MouseEvent, logo: any): void {\r\n    event.preventDefault();\r\n\r\n    logo.click();\r\n  }\r\n\r\n  uploadLogo(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (event.target.files.length > 0) {\r\n      const [file] = event.target.files;\r\n\r\n      this.$org.uploadLogo(file).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$snackBar.open(result.message, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  uploadWallpaper(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (event.target.files.length > 0) {\r\n      const [file] = event.target.files;\r\n\r\n      this.$org.uploadWallpaper(file).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$snackBar.open(result.message, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get org(): OrgModel | undefined {\r\n    return this.$authentication.user?.org;\r\n  }\r\n\r\n  get wallpaperPath(): string {\r\n    return this.$org.wallpaperPath;\r\n  }\r\n\r\n  get logoPath(): string {\r\n    return this.$org.logoPath;\r\n  }\r\n}\r\n","<div class=\"container-fluid container-cover container-org\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-lg-5\">\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <div mat-card-avatar class=\"org-logo\" [ngStyle]=\"{'background-image': 'url(' + logoPath + ')'}\">\r\n                    </div>\r\n                    <mat-card-title>{{org?.name || ''}}</mat-card-title>\r\n                    <mat-card-subtitle>{{org?.website || ''}}</mat-card-subtitle>\r\n\r\n                    <div class=\"spacer\"></div>\r\n                    <button mat-icon-button class=\"mat-elevation-z\" [matMenuTriggerFor]=\"medit\">\r\n                        <img src=\"assets/images/edit.svg\" width=\"18px\">\r\n                    </button>\r\n                    <!-- File -->\r\n                    <input type=\"file\" class=\"d-none\" #logo accept=\"image/jpg,image/jpeg,image/png\"\r\n                        (change)=\"uploadLogo($event)\">\r\n                    <!-- File -->\r\n                    <input type=\"file\" class=\"d-none\" #wallpaper accept=\"image/jpg,image/jpeg,image/png\"\r\n                        (change)=\"uploadWallpaper($event)\">\r\n                    <mat-menu #medit=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"pickLogo($event, logo)\">Logo</button>\r\n                        <button mat-menu-item (click)=\"pickWallpaper($event, wallpaper)\">Wallpaper</button>\r\n                    </mat-menu>\r\n                </mat-card-header>\r\n                <img mat-card-image [src]=\"wallpaperPath\">\r\n\r\n                <mat-card-content>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <!-- Name -->\r\n                            <mat-form-field hintLabel=\"What it is called\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Name</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"75\" placeholder=\"Main\"\r\n                                    value=\"{{org?.name || 'Untitled'}}\" #name readonly>\r\n                                <mat-hint align=\"end\">{{name.value.length || 0}} / 75</mat-hint>\r\n                            </mat-form-field>\r\n                            <!-- Phone -->\r\n                            <mat-form-field hintLabel=\"Where they call you\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Phone</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"10\" placeholder=\"##########\"\r\n                                    value=\"{{org?.phone || ''}}\" #phone readonly>\r\n                                <mat-hint align=\"end\">{{phone.value.length || 0}} / 10</mat-hint>\r\n                            </mat-form-field>\r\n                            <!-- Website -->\r\n                            <mat-form-field hintLabel=\"Where they visit you\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Website</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"255\" placeholder=\"https://air.io\"\r\n                                    value=\"{{org?.website || ''}}\" #website readonly>\r\n                                <mat-hint align=\"end\">{{website.value.length || 0}} / 255</mat-hint>\r\n                            </mat-form-field>\r\n                            <!-- Email -->\r\n                            <mat-form-field hintLabel=\"Where they spam you\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"320\" placeholder=\"user@air.io\"\r\n                                    value=\"{{org?.email || ''}}\" #email readonly>\r\n                                <mat-hint align=\"end\">{{email.value.length || 0}} / 320</mat-hint>\r\n                            </mat-form-field>\r\n                            <!-- SLUG -->\r\n                            <mat-form-field hintLabel=\"Your unique namespace\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>SLUG</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"10\" placeholder=\"AIR\" value=\"{{org?.slug || ''}}\"\r\n                                    #slug readonly>\r\n                                <mat-hint align=\"end\">{{slug.value.length || 0}} / 10</mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-lg-7\">\r\n            <!-- Departments -->\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <mat-card-title>Departments</mat-card-title>\r\n                    <mat-card-subtitle>Yet another level of heirarchy</mat-card-subtitle>\r\n\r\n                    <div class=\"spacer\"></div>\r\n\r\n                    <!-- Add -->\r\n                    <button mat-mini-fab class=\"mat-elevation-z\" (click)=\"departmentPlay(null)\"\r\n                        *ngIf=\"breakpoints.isMD == false\">\r\n                        <img src=\"assets/images/add.svg\">\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" (click)=\"departmentPlay(null)\"\r\n                        *ngIf=\"breakpoints.isMD == true\">\r\n                        Add Department\r\n                    </button>\r\n                </mat-card-header>\r\n\r\n                <mat-card-content>\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"dtds\">\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\">{{department.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\">{{department.name}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Action Column -->\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" (click)=\"departmentPlay(department)\">\r\n                                    <img src=\"assets/images/edit.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"dtdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: dtdc\"></mat-row>\r\n                    </mat-table>\r\n                </mat-card-content>\r\n\r\n                <mat-card-footer>\r\n                    She said what you know about love?\r\n                </mat-card-footer>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrgComponent } from '@admin/org/org.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: OrgComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrgRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrgRoutingModule } from '@admin/org/org-routing.module';\r\nimport { OrgComponent } from '@admin/org/org.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DepartmentPlayComponent } from '@admin/org/department-play/department-play.component';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OrgComponent, DepartmentPlayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrgRoutingModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class OrgModule { }\r\n"]}