{"version":3,"sources":["./src/app/admin/visitors/all/all.component.ts","./src/app/admin/visitors/all/all.component.html","./src/app/admin/visitors/visitors-routing.module.ts","./src/app/admin/visitors/visits/visits.component.ts","./src/app/admin/visitors/visits/visits.component.html","./src/app/admin/visitors/visitors.component.ts","./src/app/admin/visitors/visitors.component.html","./src/app/admin/visitors/filter/filter.component.ts","./src/app/admin/visitors/filter/filter.component.html","./src/app/services/visitor.service.ts","./src/app/admin/visitors/visitor/visitor.component.html","./src/app/admin/visitors/visitor/visitor.component.ts","./src/app/admin/visitors/visitors.module.ts"],"names":[],"mappings":"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","file":"admin-visitors-visitors-module-es2015.js","sourcesContent":["import { AfterContentInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { VisitorModel } from '@models/visitor.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { CSVService } from '@services/csv.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-all',\r\n  templateUrl: './all.component.html',\r\n  styleUrls: ['./all.component.css']\r\n})\r\nexport class AllComponent implements OnInit, AfterContentInit {\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  cache: any = null;\r\n\r\n  // Visitors table\r\n  vtdc: string[];\r\n  vtds: MatTableDataSource<VisitorModel>;\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $csv: CSVService,\r\n    private $snackBar: MatSnackBar,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.vtdc = ['id', 'name', 'phone', 'action'];\r\n    } else {\r\n      this.vtdc = ['id', 'name', 'action'];\r\n    }\r\n\r\n    this.vtds = new MatTableDataSource<VisitorModel>([\r\n    ]);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  updateFilter(filter: any): void {\r\n    this.cache = filter;\r\n\r\n    this.sse = '';\r\n    this.$visitor.getVisitors(filter).subscribe(\r\n      (visitors: VisitorModel[]) => {\r\n        this.vtds.data = visitors;\r\n        this.vtds.sort = this.sort;\r\n\r\n        if (visitors.length === 0) {\r\n          this.$snackBar.open('You do not have anything here', '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.sse = error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  getVisitorsCSV(): void {\r\n    if (this.cache) {\r\n      this.sse = '';\r\n\r\n      this.$visitor.getVisitorsCSV(this.cache).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.$csv.prompt(result.data.filename);\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    } else {\r\n      this.$snackBar.open('You must first fetch visitors', '', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  getVisitor(id: number) {\r\n    this.$visitor.getVisitor(id);\r\n  }\r\n}\r\n","<div class=\"row no-gutters\">\r\n    <div class=\"col-12 col-md-8\">\r\n        <app-filter (fe)=\"updateFilter($event)\"></app-filter>\r\n\r\n        <!-- Table -->\r\n        <mat-table [dataSource]=\"vtds\" matSort>\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.id}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.name}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Phone Column -->\r\n            <ng-container matColumnDef=\"phone\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">{{visitor.phone}}</mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let visitor\">\r\n                    <button mat-icon-button class=\"mat-elevation-z\" (click)=\"getVisitor(visitor.id)\">\r\n                        <img src=\"assets/images/eye.svg\" width=\"18px\">\r\n                    </button>\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"vtdc\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: vtdc\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-4\">\r\n        <app-visitor></app-visitor>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n        <div class=\"d-flex justify-content-center breathe\">\r\n            <button mat-mini-fab color=\"primary\" class=\"mat-elevation-z\" (click)=\"getVisitorsCSV()\">\r\n                <img src=\"assets/images/database.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-sse\">\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { VisitorsComponent } from '@admin/visitors/visitors.component';\r\n\r\nconst routes: Routes = [{ path: '', component: VisitorsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class VisitorsRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { StatusModel } from '@models/status.model';\r\nimport { UserModel } from '@models/user.model';\r\nimport { VisitModel } from '@models/visit.model';\r\nimport { BreakPointsService } from '@services/breakpoints.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { VisitService } from '@services/visit.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-visits',\r\n  templateUrl: './visits.component.html',\r\n  styleUrls: ['./visits.component.css']\r\n})\r\nexport class VisitsComponent implements OnInit {\r\n  date: Date = new Date();\r\n  status: number = 2;\r\n\r\n  @ViewChild(MatSort)\r\n  sort: MatSort | null = null;\r\n\r\n  sse = '';\r\n\r\n  hosts: any = [];\r\n\r\n  // Visits table\r\n  vtdc: string[];\r\n  vtds: MatTableDataSource<VisitModel>;\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $visit: VisitService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n    public breakpoints: BreakPointsService,\r\n  ) {\r\n    if (this.breakpoints.isMD) {\r\n      this.vtdc = ['id', 'accompanying', 'agenda', 'vehicle', 'hosts'];\r\n    } else {\r\n      this.vtdc = ['id', 'accompanying', 'agenda', 'hosts'];\r\n    }\r\n\r\n    this.vtds = new MatTableDataSource<VisitModel>([\r\n    ]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getVisits(): void {\r\n    let visitor = this.$visitor.$visitor.getValue();\r\n\r\n    if (visitor == null) {\r\n      this.$snackBar.open('Please select visitor first', '', {\r\n        duration: 3000,\r\n      });\r\n    } else\r\n\r\n      this.$visit.getVisitsOfVisitor(visitor.id, this.status, this.date)\r\n        .subscribe(\r\n          (visits: VisitModel[]) => {\r\n            this.vtds.data = visits;\r\n            this.vtds.sort = this.sort;\r\n\r\n            console.log(visits);\r\n\r\n            if (visits.length === 0) {\r\n              this.$snackBar.open('You do not have anything here', '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n  getHostsOfVisit(id: number): void {\r\n    this.hosts = [];\r\n    let visitor = this.$visitor.$visitor.getValue();\r\n\r\n    if (visitor == null) {\r\n      this.$snackBar.open('Please select visitor first', '', {\r\n        duration: 3000,\r\n      });\r\n    } else\r\n\r\n      this.$visit.getHostsOfVisit(id)\r\n        .subscribe(\r\n          (response: HttpResponseModel) => {\r\n            this.hosts = response.data.hosts;\r\n            console.log(this.hosts);\r\n          },\r\n          (error: HttpResponseModel) => {\r\n            this.$snackBar.open(error.message, '', {\r\n              duration: 3000,\r\n            });\r\n          }\r\n        );\r\n  }\r\n\r\n  get statuses(): StatusModel[] {\r\n    return this.config.statuses;\r\n  }\r\n}\r\n","<div class=\"container-fluid container-visits\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-12 col-md-8\">\r\n            <div class=\"row header bg-dotted\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Day -->\r\n                    <mat-form-field hintLabel=\"Day\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Day</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\" ngDefaultControl\r\n                            (dateChange)=\"getVisits()\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- Visit Status -->\r\n                    <mat-form-field hintLabel=\"Visit Status\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Visit Status</mat-label>\r\n                        <mat-select [(ngModel)]=\"status\" (selectionChange)=\"getVisits()\">\r\n                            <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\r\n                                {{status.label}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n\r\n                    <!-- Table -->\r\n                    <mat-table [dataSource]=\"vtds\" matSort>\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.id}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Agenda Column -->\r\n                        <ng-container matColumnDef=\"agenda\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Agenda</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.agenda.label}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Accompanying Column -->\r\n                        <ng-container matColumnDef=\"accompanying\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Accompanying</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.accompanying}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Vehicle Column -->\r\n                        <ng-container matColumnDef=\"vehicle\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">{{visit.vehicle}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Hosts Column -->\r\n                        <ng-container matColumnDef=\"hosts\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Hosts</mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let visit\">\r\n                                <button mat-icon-button class=\"mat-elevation-z\" [matMenuTriggerFor]=\"mhosts\" (click)=\"getHostsOfVisit(visit.id)\">\r\n                                    <img src=\"assets/images/user.svg\" width=\"18px\">\r\n                                </button>\r\n                            </mat-cell>\r\n                \r\n                            <mat-menu #mhosts=\"matMenu\">\r\n                                \r\n                                <button mat-menu-item  *ngFor=\"let host of hosts\">\r\n                                    {{host.user.name}}   \r\n                                </button>\r\n                            </mat-menu>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"vtdc\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: vtdc\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-md-4\">\r\n            <app-visitor></app-visitor>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-sse\">\r\n        <div class=\"sse-container\">\r\n            <p class=\"sse\" *ngIf=\"sse\">\r\n                {{sse}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visitors',\r\n  templateUrl: './visitors.component.html',\r\n  styleUrls: ['./visitors.component.css']\r\n})\r\nexport class VisitorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid container-cover container-visitors\">\r\n    <!-- Visitors -->\r\n    <mat-card >\r\n        <mat-card-header>\r\n            <mat-card-title>Visitors</mat-card-title>\r\n            <mat-card-subtitle>With great power comes great responsibility</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-12 col-md\">\r\n                    <mat-tab-group>\r\n                        <mat-tab label=\"All\">\r\n                            <app-all></app-all>\r\n                        </mat-tab>\r\n                        \r\n                        <mat-tab label=\"Visits\">\r\n                            <app-visits></app-visits>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-footer>\r\n            She said what you know about love?\r\n        </mat-card-footer>\r\n    </mat-card>\r\n</div>","import { AfterContentInit, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ConfigService } from '@services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.css']\r\n})\r\nexport class FilterComponent implements OnInit, AfterContentInit {\r\n  @Output() fe = new EventEmitter<any>();\r\n\r\n  filter: any = {\r\n    query: '',\r\n  };\r\n\r\n  constructor(\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  emit(): void {\r\n    this.fe.emit(this.filter);\r\n  }\r\n}\r\n","<div class=\"container-fluid container-filter bg-dotted\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col\">\r\n            <!-- Query -->\r\n            <mat-form-field hintLabel=\"Find specifically\" appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Search</mat-label>\r\n                <input type=\"text\" #query matInput maxlength=\"30\" placeholder=\"Bill Gates\" [(ngModel)]=\"filter.query\">\r\n                <mat-hint align=\"end\">{{query.value.length || 0}} / 30</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-auto\">\r\n            <div class=\"container-fluid\">\r\n                <button mat-mini-fab color=\"secondary\" class=\"mat-elevation-z2\" (click)=\"emit()\">\r\n                    <img src=\"assets/images/arrow-right.svg\" width=\"18px\">\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from '@services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfigService } from './config.service';\r\nimport { VisitorModel } from '@models/visitor.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VisitorService {\r\n  getVisitors(filter: any): Observable<VisitorModel[]> {\r\n    return this.$api.post('/visitor/all/filtered', {\r\n      filter,\r\n    }).pipe(\r\n      map((result: HttpResponseModel): VisitorModel[] => result.data.visitors));\r\n  }\r\n\r\n  getVisitorsCSV(filter: any): Observable<HttpResponseModel> {\r\n    return this.$api.post('/csv/visitors/all/filtered', {\r\n      filter,\r\n    });\r\n  }\r\n\r\n  deleteVisitor(id: number): Observable<HttpResponseModel> {\r\n    return this.$api.delete(`/visitor/${id}`);\r\n  }\r\n\r\n  updateVisitorBlack(id: number, black: boolean): Observable<HttpResponseModel> {\r\n    return this.$api.patch(`/visitor/${id}/black/${black}`, {});\r\n  }\r\n\r\n  $visitor: BehaviorSubject<VisitorModel | null> = new BehaviorSubject<VisitorModel | null>(null);\r\n\r\n  constructor(\r\n    private $api: ApiService,\r\n    private $snackBar: MatSnackBar,\r\n    public config: ConfigService,\r\n  ) {\r\n  }\r\n\r\n  getVisitor(id: number): void {\r\n    this.$api.get(`/visitor/${id}`).subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$visitor.next(result.data.visitor);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.$snackBar.open(error.message, '', {\r\n          duration: 3000,\r\n        });\r\n      });\r\n  }\r\n\r\n  nullifyVisitor(): void {\r\n    this.$visitor.next(null);\r\n  }\r\n\r\n  get visitor(): BehaviorSubject<VisitorModel | null> {\r\n    return this.$visitor;\r\n  }\r\n\r\n  get profilePath(): string {\r\n    const visitor = this.$visitor.getValue();\r\n    if (visitor) {\r\n      return `${this.config.api.url}/profile/${visitor.org.id}/${visitor.phone}`;\r\n    }\r\n    return `${this.config.api.url}/profile/loni`;\r\n  }\r\n\r\n  get gidPath(): string {\r\n    const visitor = this.$visitor.getValue();\r\n    if (visitor) {\r\n      return `${this.config.api.url}/gid/${visitor.org.id}/${visitor.phone}`;\r\n    }\r\n    return ``;\r\n  }\r\n}\r\n","<div class=\"container container-visitor\" *ngIf=\"visitor\">\r\n    <mat-card-header>\r\n        <div mat-card-avatar *ngIf=\"visitor.black\" [ngStyle]=\"{'background-color': '#242424'}\"></div>\r\n        <mat-card-title>\r\n            {{visitorName}}\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n            Visitor\r\n    </mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    \r\n    <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + profilePath + ')'}\">\r\n        <div class=\"visitorname\">\r\n            {{visitorName}}\r\n        </div>\r\n        <div class=\"mvisitor\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"mvisitor\">\r\n                <img src=\"assets/images/edit-light.svg\" width=\"18px\">\r\n            </button>\r\n        </div>\r\n        <mat-menu #mvisitor=\"matMenu\">\r\n            <button mat-menu-item>\r\n                <span *ngIf=\"visitor.black\" (click)=\"updateVisitorBlack(false)\">\r\n                    Unblack\r\n                </span>\r\n                <span *ngIf=\"visitor.black == false\" (click)=\"updateVisitorBlack(true)\">\r\n                    Black\r\n                </span>\r\n            </button>\r\n            <button mat-menu-item (click)=\"deleteVisitor()\">Delete</button>\r\n        </mat-menu>\r\n    </div>\r\n    \r\n    <section>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        Name\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.name}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Phone\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.phone}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Email\r\n                    </td>\r\n                    <td>\r\n                        :\r\n                    </td>\r\n                    <td>\r\n                        {{visitor.email}}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </section>\r\n\r\n    <div class=\"profile\" [ngStyle]=\"{'background-image': 'url(' + gidPath + ')'}\">\r\n        <div class=\"visitorname\">\r\n            Government ID\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { RoleModel } from '@models/role.model';\r\nimport { VisitorModel } from '@models/visitor.model';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { ConfirmService } from '@services/confirm.service';\r\nimport { VisitorService } from '@services/visitor.service';\r\n\r\n@Component({\r\n  selector: 'app-visitor',\r\n  templateUrl: './visitor.component.html',\r\n  styleUrls: ['./visitor.component.css']\r\n})\r\nexport class VisitorComponent implements OnInit, AfterContentInit {\r\n  visitor: VisitorModel | null = null;\r\n\r\n  roles: RoleModel[] = [];\r\n\r\n  constructor(\r\n    private $visitor: VisitorService,\r\n    private $snackBar: MatSnackBar,\r\n    private $confirm: ConfirmService,\r\n    public config: ConfigService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getVisitor();\r\n  }\r\n\r\n  getVisitor(): void {\r\n    this.$visitor.$visitor.subscribe((visitor: VisitorModel | null) => {\r\n      this.visitor = visitor;\r\n    });\r\n  }\r\n\r\n  deleteVisitor(): void {\r\n    const cdr = this.$confirm.prompt(\r\n      'Are you sure?',\r\n      `This action is irreversible. Visitors are meant to be deleted on when they \r\n      are illegitimate or accidently created. This will also result in deleting \r\n      of information associated with the visitor`,\r\n    );\r\n\r\n    cdr.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        if (this.visitor) {\r\n          this.$visitor.deleteVisitor(this.visitor.id).subscribe(\r\n            () => {\r\n              this.$visitor.nullifyVisitor();\r\n              this.$snackBar.open(`Visitor and associated information deleted`, '', {\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.$snackBar.open(error.message, '', {\r\n                duration: 3000,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      }\r\n      else {\r\n        this.$snackBar.open('Operation cancelled by the user', '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateVisitorBlack(black: boolean): void {\r\n    if (this.visitor) {\r\n      this.$visitor.updateVisitorBlack(this.visitor.id, black).subscribe(\r\n        () => {\r\n          if (this.visitor) {\r\n            this.$visitor.getVisitor(this.visitor.id);\r\n          }\r\n          this.$snackBar.open(`Visitor's black updated`, '', {\r\n            duration: 3000,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.$snackBar.open(error.message, '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get profilePath(): string {\r\n    return this.$visitor.profilePath;\r\n  }\r\n\r\n  get gidPath(): string {\r\n    return this.$visitor.gidPath;\r\n  }\r\n\r\n  get visitorName(): string {\r\n    const visitor = this.$visitor.$visitor?.getValue();\r\n    return visitor ? visitor.name : 'Untitled';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VisitorsRoutingModule } from '@admin/visitors/visitors-routing.module';\r\nimport { VisitorsComponent } from '@admin/visitors/visitors.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AllComponent } from '@admin/visitors/all/all.component';\r\nimport { FilterComponent } from '@admin/visitors/filter/filter.component';\r\nimport { VisitorComponent } from '@admin/visitors/visitor/visitor.component';\r\nimport { VisitsComponent } from './visits/visits.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [VisitorsComponent, AllComponent, FilterComponent, VisitorComponent, VisitsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    VisitorsRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatDividerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n  ]\r\n})\r\nexport class VisitorsModule { }\r\n"],"sourceRoot":"webpack:///"}