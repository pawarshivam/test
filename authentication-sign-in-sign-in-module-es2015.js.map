{"version":3,"sources":["./src/app/authentication/sign-in/sign-out/sign-out.component.ts","./src/app/authentication/sign-in/sign-out/sign-out.component.html","./src/app/authentication/sign-in/sign-in.component.ts","./src/app/authentication/sign-in/sign-in.component.html","./src/app/authentication/sign-in/otp/otp.component.ts","./src/app/authentication/sign-in/otp/otp.component.html","./src/app/authentication/sign-in/sign-in-routing.module.ts","./src/app/authentication/sign-in/sign-in.module.ts"],"names":[],"mappings":"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","file":"authentication-sign-in-sign-in-module-es2015.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-out',\r\n  templateUrl: './sign-out.component.html',\r\n  styleUrls: ['./sign-out.component.css']\r\n})\r\nexport class SignOutComponent implements OnInit {\r\n  sse = '';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private $dialog: MatDialogRef<SignOutComponent>,\r\n    private $snackBar: MatSnackBar,\r\n    private $authentication: AuthenticationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signOut(): void {\r\n    this.$authentication.signOut().subscribe(\r\n      (result: HttpResponseModel) => {\r\n        this.$snackBar.open(result.message, '', {\r\n          duration: 3000,\r\n        });\r\n\r\n        this.$dialog.close(true);\r\n      },\r\n      (error: HttpResponseModel) => {\r\n        this.sse = error.message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h1 class=\"mat-h1\" mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n    <p>You are already signed in. If you wish to sign in with another you account, you will have to sign out first</p>\r\n    <div class=\"sse-container\">\r\n        <p class=\"sse\" *ngIf=\"sse\">\r\n            {{sse}}\r\n        </p>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>Dashboard</button>\r\n    <button mat-button (click)=\"signOut()\">Sign Out</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\nimport { ConfigService } from '@services/config.service';\r\nimport { OTPComponent } from '@authentication/sign-in/otp/otp.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignOutComponent } from '@authentication/sign-in/sign-out/sign-out.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  sse = '';\r\n\r\n  sifg: FormGroup = new FormGroup({\r\n    slug: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[A-Za-z]{1,8}$/),\r\n      ],\r\n    ),\r\n    phone: new FormControl(\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[0-9]{10}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  constructor(\r\n    private $authentication: AuthenticationService,\r\n    private $bottomSheet: MatBottomSheet,\r\n    private $dialog: MatDialog,\r\n    private $router: Router,\r\n    public config: ConfigService,\r\n  ) {\r\n    if ($authentication.authenticated.getValue()) {\r\n      const sodr = this.$dialog.open(SignOutComponent, {\r\n        width: '360px',\r\n        data: {\r\n          name: $authentication.user?.name || 'Untitled',\r\n        },\r\n        disableClose: true,\r\n      });\r\n\r\n      sodr.afterClosed().subscribe((result: boolean) => {\r\n        if (result === false) {\r\n          this.$router.navigate(['/dashboard']);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signIn(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.sifg.valid) {\r\n      this.sse = '';\r\n      this.sifg.disable();\r\n      this.$authentication.getOTP(this.sifg.value.phone).subscribe(\r\n        (result: HttpResponseModel) => {\r\n          this.sifg.enable();\r\n          this.$bottomSheet.open(OTPComponent, {\r\n            data: {\r\n              si: this.sifg.value,\r\n            },\r\n            disableClose: true,\r\n          });\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.sifg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  beautifySlug(slug: string): void {\r\n    this.sifg.patchValue({\r\n      slug: slug.trim().toUpperCase(),\r\n    });\r\n  }\r\n}\r\n","<div class=\"container container-lifted\">\r\n    <div class=\"d-flex justify-content-center\">\r\n        <form [formGroup]=\"sifg\" (ngSubmit)=\"signIn($event)\">\r\n            <mat-card class=\"card-sign-in\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Sign In</mat-card-title>\r\n                    <mat-card-subtitle>Stay updated on your professional world with {{config.app.name}}\r\n                    </mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <!-- Slug -->\r\n                            <mat-form-field hintLabel=\"The one with admin\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Slug</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"8\" placeholder=\"AIR\" #slug\r\n                                    formControlName=\"slug\" (keyup)=\"beautifySlug(slug.value)\">\r\n                                <mat-hint align=\"end\">{{slug.value.length || 0}} / 8</mat-hint>\r\n                                <mat-error>Allowed a-Z</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <!-- Phone -->\r\n                            <mat-form-field hintLabel=\"The one that you have registered\" appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Phone</mat-label>\r\n                                <input type=\"text\" matInput maxlength=\"10\" placeholder=\"##########\" #phone\r\n                                    formControlName=\"phone\">\r\n                                <mat-hint align=\"end\">{{phone.value.length || 0}} / 10</mat-hint>\r\n                                <mat-error>Allowed 0-9</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-checkbox>\r\n                                Keep me signed in on this device\r\n                            </mat-checkbox>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"sse-container\">\r\n                                <p class=\"sse\" *ngIf=\"sse\">\r\n                                    {{sse}}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\" [disabled]=\"sifg.invalid\">\r\n                        Sign In\r\n                    </button>\r\n                </mat-card-actions>\r\n                <mat-card-header>\r\n                    <div mat-card-avatar class=\"brand-logo\"></div>\r\n                    <mat-card-title>{{config.app.name}}</mat-card-title>\r\n                    <mat-card-subtitle>{{config.app.tagline}}</mat-card-subtitle>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { HttpResponseModel } from '@models/http/response.model';\r\nimport { AuthenticationService } from '@services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OTPComponent implements OnInit {\r\n  sse = '';\r\n\r\n  vfg: FormGroup = new FormGroup({\r\n    otp: new FormControl(\r\n      '000000',\r\n      [\r\n        Validators.required,\r\n        Validators.pattern(/^[0-9]{6}$/),\r\n      ],\r\n    ),\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n    private $authentication: AuthenticationService,\r\n    private $router: Router,\r\n    private $bottomSheetRef: MatBottomSheetRef<OTPComponent>,\r\n    private $snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  verifyOTP(event: any): void {\r\n    event.preventDefault();\r\n\r\n    if (this.vfg.valid) {\r\n      this.sse = '';\r\n      this.vfg.disable();\r\n      this.$authentication.verifyOTP(this.data.si.phone, this.vfg.value.otp).subscribe(\r\n        () => {\r\n          this.$authentication.signIn(this.data.si).subscribe(\r\n            (result: HttpResponseModel) => {\r\n              this.vfg.enable();\r\n              this.$bottomSheetRef.dismiss();\r\n              this.$snackBar.open(result.message, '', {\r\n                duration: 3000,\r\n              });\r\n\r\n              this.$router.navigate(['/dashboard']);\r\n            },\r\n            (error: HttpResponseModel) => {\r\n              this.vfg.enable();\r\n              this.sse = error.message;\r\n            }\r\n          );\r\n        },\r\n        (error: HttpResponseModel) => {\r\n          this.vfg.enable();\r\n          this.sse = error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss(event: MouseEvent): void {\r\n    this.$bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","<div class=\"container container-otp\">\r\n    <form [formGroup]=\"vfg\" (ngSubmit)=\"verifyOTP($event)\">\r\n        <mat-card-header>\r\n            <mat-card-title>Verify OTP</mat-card-title>\r\n            <mat-card-subtitle>Check you phone for OTP</mat-card-subtitle>\r\n\r\n            <div class=\"spacer\"></div>\r\n\r\n            <!-- X -->\r\n            <button mat-icon-button class=\"mat-elevation-z\" (click)=\"dismiss($event)\">\r\n                <img src=\"assets/images/x.svg\">\r\n            </button>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-md-6\">\r\n                    <!-- OTP -->\r\n                    <mat-form-field hintLabel=\"The one that you registered\" appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>OTP</mat-label>\r\n                        <input type=\"text\" matInput maxlength=\"6\" placeholder=\"######\" #otp formControlName=\"otp\">\r\n                        <mat-hint align=\"end\">{{otp.value.length || 0}} / 6</mat-hint>\r\n                        <mat-error>Allowed 0-9</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-md-6\">\r\n                    <p>\r\n                        We have shared a 6 digit OTP with {{data.si.phone}}\r\n                    </p>\r\n                    <p>\r\n                        OTP is valid for only 2 mins\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                    <h1 class=\"mat-display-1 otp-clock\">01:59</h1>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                    <div class=\"sse-container\">\r\n                        <p class=\"sse\" *ngIf=\"sse\">\r\n                            {{sse}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions>\r\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\" [disabled]=\"vfg.invalid\">\r\n                Verify OTP\r\n            </button>\r\n        </mat-card-actions>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SignInComponent } from '@authentication/sign-in/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: SignInComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignInRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SignInRoutingModule } from '@authentication/sign-in/sign-in-routing.module';\r\nimport { SignInComponent } from '@authentication/sign-in/sign-in.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { OTPComponent } from '@authentication/sign-in/otp/otp.component';\r\nimport { SignOutComponent } from '@authentication/sign-in/sign-out/sign-out.component';\r\n\r\n@NgModule({\r\n  declarations: [SignInComponent, OTPComponent, SignOutComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SignInRoutingModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n  ]\r\n})\r\nexport class SignInModule { }\r\n"],"sourceRoot":"webpack:///"}